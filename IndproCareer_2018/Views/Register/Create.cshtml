@model IndproCareer.Entity.Models.Register

@{
    ViewBag.Title = "Register";
}

@using (Html.BeginForm("Create", "Register", FormMethod.Post, new { enctype = "multipart/form-data",name="myForm" ,onsubmit="return(Validate());"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title"><span class="pull-left">Register</span></h3>
                        <h3 class="panel-title" style="margin-bottom:20px">
                            <span class="pull-right">@Html.ActionLink("Login", "Login")</span>                          
                        </h3>                      
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6 col-sm-6 col-xs-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EnumDropDownListFor(model => model.Role, "Please Select Role", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>                             

                            </div>

                            <div class="col-md-6 col-sm-6 col-xs-6">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.DropDownList("Country", ViewBag.Country as SelectList, "Please Select a Country", new { @class = "form-control" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.DropDownList("State", new SelectList(string.Empty, "Value", "Text"), "-- Please select a State --", new { @class = "form-control" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.DropDownList("City", new SelectList(string.Empty, "Value", "Text"), "-- Please select a State --", new { @class = "form-control" })
                                                                        
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-3 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-success" />
                                        @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-success" })
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

}

@section Scripts
{
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        //Country Dropdown Selectedchange event
        $("#Country").change(function () {
            $("#State").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetStates")', // Calling json method
                dataType: 'json',
                data: { id: $("#Country").val() },
                // Get Selected Country ID.
                success: function (states) {                   
                    $.each(states, function (i, state) {                       
                        $("#State").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })

        $("#State").change(function () {
            $("#City").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCitys")', // Calling json method
                dataType: 'json',
                data: { id: $("#State").val() },
                // Get Selected Country ID.
                success: function (citis) {
                    $.each(citis, function (i, citi) {
                        $("#City").append('<option value="' + citi.Value + '">' + citi.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve citi.' + ex);
                }
            });
            return false;
        })
    
    });

</script>

}