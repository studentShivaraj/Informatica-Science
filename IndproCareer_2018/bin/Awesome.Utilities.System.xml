<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Awesome.Utilities.System</name>
    </assembly>
    <members>
        <member name="T:System.AdvancedMath">
            <summary>
                A math class with more advanced methods than System.Math
            </summary>
        </member>
        <member name="M:System.AdvancedMath.GreatestCommonDivisor(System.Byte,System.Byte)">
            <summary>
            Finds the greatest common divisor of two numbers.
            The greatest common divisor is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The greatest common divisor of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.GreatestCommonDivisor(System.Decimal,System.Decimal)">
            <summary>
            Finds the greatest common divisor of two numbers.
            The greatest common divisor is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The greatest common divisor of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.GreatestCommonDivisor(System.Double,System.Double)">
            <summary>
            Finds the greatest common divisor of two numbers.
            The greatest common divisor is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The greatest common divisor of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.GreatestCommonDivisor(System.Int16,System.Int16)">
            <summary>
            Finds the greatest common divisor of two numbers.
            The greatest common divisor is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The greatest common divisor of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.GreatestCommonDivisor(System.Int32,System.Int32)">
            <summary>
            Finds the greatest common divisor of two numbers.
            The greatest common divisor is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The greatest common divisor of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.GreatestCommonDivisor(System.Int64,System.Int64)">
            <summary>
            Finds the greatest common divisor of two numbers.
            The greatest common divisor is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The greatest common divisor of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.GreatestCommonDivisor(System.SByte,System.SByte)">
            <summary>
            Finds the greatest common divisor of two numbers.
            The greatest common divisor is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The greatest common divisor of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.GreatestCommonDivisor(System.Single,System.Single)">
            <summary>
            Finds the greatest common divisor of two numbers.
            The greatest common divisor is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The greatest common divisor of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.GreatestCommonDivisor(System.UInt16,System.UInt16)">
            <summary>
            Finds the greatest common divisor of two numbers.
            The greatest common divisor is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The greatest common divisor of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.GreatestCommonDivisor(System.UInt32,System.UInt32)">
            <summary>
            Finds the greatest common divisor of two numbers.
            The greatest common divisor is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The greatest common divisor of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.GreatestCommonDivisor(System.UInt64,System.UInt64)">
            <summary>
            Finds the greatest common divisor of two numbers.
            The greatest common divisor is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The greatest common divisor of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.LeastCommonMultiple(System.Byte,System.Byte)">
            <summary>
            Finds the least common multiple of two numbers.
            The least common multiple is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The least common multiple of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.LeastCommonMultiple(System.Decimal,System.Decimal)">
            <summary>
            Finds the least common multiple of two numbers.
            The least common multiple is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The least common multiple of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.LeastCommonMultiple(System.Double,System.Double)">
            <summary>
            Finds the least common multiple of two numbers.
            The least common multiple is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The least common multiple of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.LeastCommonMultiple(System.Int16,System.Int16)">
            <summary>
            Finds the least common multiple of two numbers.
            The least common multiple is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The least common multiple of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.LeastCommonMultiple(System.Int32,System.Int32)">
            <summary>
            Finds the least common multiple of two numbers.
            The least common multiple is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The least common multiple of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.LeastCommonMultiple(System.Int64,System.Int64)">
            <summary>
            Finds the least common multiple of two numbers.
            The least common multiple is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The least common multiple of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.LeastCommonMultiple(System.SByte,System.SByte)">
            <summary>
            Finds the least common multiple of two numbers.
            The least common multiple is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The least common multiple of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.LeastCommonMultiple(System.Single,System.Single)">
            <summary>
            Finds the least common multiple of two numbers.
            The least common multiple is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The least common multiple of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.LeastCommonMultiple(System.UInt16,System.UInt16)">
            <summary>
            Finds the least common multiple of two numbers.
            The least common multiple is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The least common multiple of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.LeastCommonMultiple(System.UInt32,System.UInt32)">
            <summary>
            Finds the least common multiple of two numbers.
            The least common multiple is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The least common multiple of the two numbers.</returns>
        </member>
        <member name="M:System.AdvancedMath.LeastCommonMultiple(System.UInt64,System.UInt64)">
            <summary>
            Finds the least common multiple of two numbers.
            The least common multiple is the largest positive integer that divides the numbers without a remainder.
            </summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The least common multiple of the two numbers.</returns>
        </member>
        <member name="T:System.Clock">
            <summary>
            Using Clock.Now instead of DateTime.Now in your projects
            allows for a greater degree of testability.
            </summary>
        </member>
        <member name="M:System.Clock.Pause">
            <summary>
            Pauses the clock on the current time.
            </summary>
            <returns>An IDisposable object that will resume the clock on dispose.</returns>
        </member>
        <member name="M:System.Clock.Pause(System.DateTime)">
            <summary>
            Pauses the clock on the specified time.
            </summary>
            <param name="utcNowDate">The dateTime at which we want to pause..</param>
            <returns>
            An IDisposable object that will resume the clock on dispose.
            </returns>
        </member>
        <member name="P:System.Clock.IsPaused">
            <summary>
            Gets a value indicating whether this instance is paused.
            </summary>
        </member>
        <member name="P:System.Clock.Now">
            <summary>
            Gets a DateTime representing the current date and time. The
            resolution of the returned value depends on the system timer. For Windows NT 3.5 and later the timer resolution is approximately 10ms, 
            for Windows NT 3.1 it is approximately 16ms, and for Windows 95 and 98 it is approximately 55ms. 
            </summary>
        </member>
        <member name="P:System.Clock.UtcNow">
            <summary>
            Gets a DateTime representing the current date and time in UTC format. The
            resolution of the returned value depends on the system timer. For Windows NT 3.5 and later the timer resolution is approximately 10ms, 
            for Windows NT 3.1 it is approximately 16ms, and for Windows 95 and 98 it is approximately 55ms. 
            </summary>
        </member>
        <member name="P:System.Clock.Transform">
            <summary>
            Gets or sets a function that will be applied to all returned DateTime values.
            </summary>
            <value>
            The transform.
            </value>
        </member>
        <member name="T:System.Collections.Generic.DictionaryExtensions">
            <summary>
                Extensions for Dictionaries
            </summary>
        </member>
        <member name="M:System.Collections.Generic.DictionaryExtensions.ToNameValueCollection``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,System.String},System.Func{``1,System.String})">
            <summary>
            Transforms a dictionary into a key value collection using the specified functions.
            </summary>
            <typeparam name="K">The key type.</typeparam>
            <typeparam name="V">The value type.</typeparam>
            <param name="self">The self.</param>
            <param name="keyFunc">The key function.</param>
            <param name="valueFunc">The value function.</param>
            <returns>A name value collection from the dictionary.</returns>
        </member>
        <member name="M:System.Collections.Generic.DictionaryExtensions.GetValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Gets the value for the specified key, or a specified default.
            </summary>
            <typeparam name="K">The key type.</typeparam>
            <typeparam name="V">The value type.</typeparam>
            <param name="self">The self.</param>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The value from the dictionary or a default value.</returns>
        </member>
        <member name="T:System.Collections.Generic.DictionaryHelper">
            <summary>
                Helper methods for dictionaries.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.DictionaryHelper.BuildDictionaryFromAnonymousObject(System.Object)">
            <summary>
            Builds a dictionary from an anonymous object.
            </summary>
            <param name="obj">The object.</param>
            <returns>A dictionary from the anonymous object.</returns>
        </member>
        <member name="T:System.Collections.Generic.IPageable">
            <summary>
                An interface for paging
            </summary>
        </member>
        <member name="P:System.Collections.Generic.IPageable.CurrentPage">
            <summary>
                Gets the current page.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.IPageable.PerPage">
            <summary>
            Gets the number of items per page.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.IPageable.TotalNumberOfRecords">
            <summary>
                Gets the total number of records.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.IPageable.LastPage">
            <summary>
                Gets the last page.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.IPageable.NextPage">
            <summary>
            Gets the next page, if there is one.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.IPageable.PreviousPage">
            <summary>
            Gets the previous page, if there is one.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.IPageable.OrderedBy">
            <summary>
            Gets how the current <see cref="T:System.Collections.Generic.IPageable"/> is ordered.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.ResultPage`1">
            <summary>
                A list of items for a current page
            </summary>
            <typeparam name="T">The type of objects in the page.</typeparam>
        </member>
        <member name="F:System.Collections.Generic.ResultPage`1.ValueOfFirstPage">
            <summary>
                The first page in a paged list.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ResultPage`1.#ctor(System.Collections.Generic.IList{`0},System.Int32,System.Int32,System.Int32,System.Data.OrderParameter[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.ResultPage`1"/> class.
            </summary>
            <param name="items">The items.</param>
            <param name="currentPage">The current page.</param>
            <param name="perPage">The per page.</param>
            <param name="totalNumberOfRecords">The total number of records.</param>
            <param name="orderedBy">The ordered by.</param>
        </member>
        <member name="M:System.Collections.Generic.ResultPage`1.Cast``1">
            <summary>
            Casts this instance to another type
            </summary>
            <typeparam name="TCast">The type of the cast.</typeparam>
            <returns>A result page cast as the specified type.</returns>
        </member>
        <member name="P:System.Collections.Generic.ResultPage`1.CurrentPage">
            <summary>
                Gets the current page.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.ResultPage`1.PerPage">
            <summary>
            Gets the number of items per page.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.ResultPage`1.TotalNumberOfRecords">
            <summary>
                Gets the total number of records.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.ResultPage`1.LastPage">
            <summary>
                Gets the last page.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.ResultPage`1.NextPage">
            <summary>
            Gets the next page, if there is one.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.ResultPage`1.PreviousPage">
            <summary>
            Gets the previous page, if there is one.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.ResultPage`1.Empty">
            <summary>
            Gets an empty result page.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.ResultPage`1.OrderedBy">
            <summary>
            Gets how the current result page is ordered.
            </summary>
        </member>
        <member name="T:System.Collections.Specialized.NameValueCollectionExtensions">
            <summary>
                Extensions for NameValueCollection
            </summary>
        </member>
        <member name="M:System.Collections.Specialized.NameValueCollectionExtensions.ToQueryString(System.Collections.Specialized.NameValueCollection,System.Boolean)">
            <summary>
            Transforms a name value collection into a query string.
            </summary>
            <param name="self">The self.</param>
            <param name="prependQueryStringDelimiter">if set to <c>true</c> prepends the query string delimiter "?".</param>
            <returns>A query string from the name value collection.</returns>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.RequiredBooleanAttribute">
            <summary>
                A validation attribute that ensures a value is set on a boolean property
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RequiredBooleanAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RequiredBooleanAttribute"/> class.
            </summary>
            <param name="expectedValue">if set to <c>true</c> [expected value].</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RequiredBooleanAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message, based on the data field where the error occurred.
            </summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>
            An instance of the formatted error message.
            </returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RequiredBooleanAttribute.IsValid(System.Object)">
            <summary>
            Determines whether the specified value of the object is valid.
            </summary>
            <param name="value">The value of the object to validate.</param>
            <returns>
            true if the specified value is valid; otherwise, false.
            </returns>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.RequiredBooleanAttribute.ExpectedValue">
            <summary>
            Gets or sets a value indicating whether the property should be true or false.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.ComparisonAttribute">
            <summary>
                An attribute to compare two properties
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ComparisonAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ComparisonAttribute"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ComparisonAttribute.Compare(System.IComparable,System.Object)">
            <summary>
            Compares the specified other value.
            </summary>
            <param name="otherValue">The other value.</param>
            <param name="thisValue">The this value.</param>
            <returns>True if the values compared in the defined way.</returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ComparisonAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message, based on the data field where the error occurred.
            </summary>
            <param name="name">The name to include in the formatted message.</param>
            <returns>
            An instance of the formatted error message.
            </returns>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.ComparisonAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the specified value with respect to the current validation attribute.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="validationContext">The context information about the validation operation.</param>
            <returns>
            An instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> class.
            </returns>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ComparisonAttribute.PropertyName">
            <summary>
            Gets or sets the name of the property to compare it too.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.ComparisonAttribute.PropertyDisplayName">
            <summary>
            Gets or sets the display name of the property, for error messages.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.LesserThanOrEqualToAttribute">
            <summary>
                An attribute to validate that a value is lesser than or equal to another
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.LesserThanOrEqualToAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.LesserThanOrEqualToAttribute"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.LesserThanOrEqualToAttribute.Compare(System.IComparable,System.Object)">
            <summary>
            Compares the specified other value.
            </summary>
            <param name="otherValue">The other value.</param>
            <param name="thisValue">The this value.</param>
            <returns>True if the values compared in the defined way.</returns>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute">
            <summary>
                An attribute to validate that a value is greater or equal to another
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.Compare(System.IComparable,System.Object)">
            <summary>
            Compares the specified other value.
            </summary>
            <param name="otherValue">The other value.</param>
            <param name="thisValue">The this value.</param>
            <returns>True if the values compared in the defined way.</returns>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.LesserThanAttribute">
            <summary>
                An attribute to validate that a value is lesser than another
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.LesserThanAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.LesserThanAttribute"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.LesserThanAttribute.Compare(System.IComparable,System.Object)">
            <summary>
            Compares the specified other value.
            </summary>
            <param name="otherValue">The other value.</param>
            <param name="thisValue">The this value.</param>
            <returns>True if the values compared in the defined way.</returns>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.GreaterThanAttribute">
            <summary>
                An attribute to validate that a value is greater than another
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.GreaterThanAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.GreaterThanAttribute"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.GreaterThanAttribute.Compare(System.IComparable,System.Object)">
            <summary>
            Compares the specified other value.
            </summary>
            <param name="otherValue">The other value.</param>
            <param name="thisValue">The this value.</param>
            <returns>True if the values compared in the defined way.</returns>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.RequiredGroupAttribute">
            <summary>
                An attribute to validate that at least one property in a group is valid.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RequiredGroupAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RequiredGroupAttribute"/> class.
            </summary>
            <param name="groupName">Name of the group.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RequiredGroupAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the specified value with respect to the current validation attribute.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="validationContext">The context information about the validation operation.</param>
            <returns>
            An instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> class.
            </returns>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.RequiredGroupAttribute.GroupName">
            <summary>
            Gets the name of the group.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.RequiredGroupAttribute.AllowMultiple">
            <summary>
            Gets or sets a value indicating whether to allow multiple required elements in the same group to be set.
            </summary>
            <value>
              <c>true</c> if [allow multiple]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.UriLengthAttribute">
            <summary>
                An attribute to check the length of a mail address
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UriLengthAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.UriLengthAttribute"/> class.
            </summary>
            <param name="maximumLength">The maximum length of a string.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.UriLengthAttribute.IsValid(System.Object)">
            <summary>
            Determines whether a specified object is valid.
            </summary>
            <param name="value">The object to validate.</param>
            <returns>
            true if the specified object is valid; otherwise, false.
            </returns>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.MailAddressLengthAttribute">
            <summary>
                An attribute to check the length of a mail address
            </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.MailAddressLengthAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.MailAddressLengthAttribute"/> class.
            </summary>
            <param name="maximumLength">The maximum length of a string.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.MailAddressLengthAttribute.IsValid(System.Object)">
            <summary>
            Determines whether a specified object is valid.
            </summary>
            <param name="value">The object to validate.</param>
            <returns>
            true if the specified object is valid; otherwise, false.
            </returns>
        </member>
        <member name="T:System.Configuration.DefaultConfiguration">
            <summary>
                Default implementation. Returns everything directly from ConfigurationManager static methods.
            </summary>
        </member>
        <member name="T:System.Configuration.IFlexibleConfiguration">
            <summary>
                An interface to wrap all configuration stuff
            </summary>
        </member>
        <member name="M:System.Configuration.IFlexibleConfiguration.GetSection(System.String)">
            <summary>
            Gets the section. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="sectionName">Name of the section.</param>
            <returns>A configuration section.</returns>
        </member>
        <member name="M:System.Configuration.IFlexibleConfiguration.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
            <summary>
            Opens the exe configuration. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="userLevel">The user level.</param>
            <returns>A configuration object</returns>
        </member>
        <member name="M:System.Configuration.IFlexibleConfiguration.OpenExeConfiguration(System.String)">
            <summary>
            Opens the exe configuration. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="exePath">The exe path.</param>
            <returns>A configuration object</returns>
        </member>
        <member name="M:System.Configuration.IFlexibleConfiguration.OpenMachineConfiguration">
            <summary>
            Opens the machine configuration. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <returns>A configuration object</returns>
        </member>
        <member name="M:System.Configuration.IFlexibleConfiguration.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
            <summary>
            Opens the mapped exe configuration. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="fileMap">The file map.</param>
            <param name="userLevel">The user level.</param>
            <returns>A configuration object</returns>
        </member>
        <member name="M:System.Configuration.IFlexibleConfiguration.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
            <summary>
            Opens the mapped machine configuration. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="fileMap">The file map.</param>
            <returns>A configuration object</returns>
        </member>
        <member name="M:System.Configuration.IFlexibleConfiguration.RefreshSection(System.String)">
            <summary>
            Refreshes the section. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="sectionName">Name of the section.</param>
        </member>
        <member name="P:System.Configuration.IFlexibleConfiguration.ConnectionStrings">
            <summary>
            Gets the connection strings.
            </summary>
        </member>
        <member name="P:System.Configuration.IFlexibleConfiguration.AppSettings">
            <summary>
            Gets the app settings.
            </summary>
        </member>
        <member name="M:System.Configuration.DefaultConfiguration.GetSection(System.String)">
            <summary>
            Gets the section. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="sectionName">Name of the section.</param>
            <returns>
            A configuration section.
            </returns>
        </member>
        <member name="M:System.Configuration.DefaultConfiguration.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
            <summary>
            Opens the exe configuration. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="userLevel">The user level.</param>
            <returns>
            A configuration object
            </returns>
        </member>
        <member name="M:System.Configuration.DefaultConfiguration.OpenExeConfiguration(System.String)">
            <summary>
            Opens the exe configuration. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="exePath">The exe path.</param>
            <returns>
            A configuration object
            </returns>
        </member>
        <member name="M:System.Configuration.DefaultConfiguration.OpenMachineConfiguration">
            <summary>
            Opens the machine configuration. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <returns>
            A configuration object
            </returns>
        </member>
        <member name="M:System.Configuration.DefaultConfiguration.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
            <summary>
            Opens the mapped exe configuration. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="fileMap">The file map.</param>
            <param name="userLevel">The user level.</param>
            <returns>
            A configuration object
            </returns>
        </member>
        <member name="M:System.Configuration.DefaultConfiguration.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
            <summary>
            Opens the mapped machine configuration. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="fileMap">The file map.</param>
            <returns>
            A configuration object
            </returns>
        </member>
        <member name="M:System.Configuration.DefaultConfiguration.RefreshSection(System.String)">
            <summary>
            Refreshes the section. See the doc of ConfigurationManager to know exactly what it does.
            </summary>
            <param name="sectionName">Name of the section.</param>
        </member>
        <member name="P:System.Configuration.DefaultConfiguration.ConnectionStrings">
            <summary>
            Gets the connection strings.
            </summary>
        </member>
        <member name="P:System.Configuration.DefaultConfiguration.AppSettings">
            <summary>
            Gets the app settings.
            </summary>
        </member>
        <member name="T:System.Configuration.FlexibleConfiguration">
            <summary>
                Flexible configuration. By default uses ConfigurationManager methods, but can be overridden with .Configure!
            </summary>
        </member>
        <member name="M:System.Configuration.FlexibleConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Configuration.FlexibleConfiguration"/> class.
            </summary>
        </member>
        <member name="M:System.Configuration.FlexibleConfiguration.Load(System.String[])">
            <summary>
            Loads a manager with the specified parameters.
            </summary>
            <param name="fileNames">The file names.</param>
            <returns>A flexible configuration object.</returns>
        </member>
        <member name="M:System.Configuration.FlexibleConfiguration.Load(System.Boolean,System.String[])">
            <summary>
            Loads a manager with the specified parameters.
            </summary>
            <param name="allowLocalOverrides">if set to <c>true</c> [allow local overrides].</param>
            <param name="fileNames">The file names.</param>
            <returns>A flexible configuration object.</returns>
        </member>
        <member name="M:System.Configuration.FlexibleConfiguration.Configure(System.String[])">
            <summary>
            Configures the manager with the specified parameters and sets the instance to the resulting configuration manager.
            </summary>
            <param name="fileNames">The file names.</param>
        </member>
        <member name="M:System.Configuration.FlexibleConfiguration.Configure(System.Boolean,System.String[])">
            <summary>
            Configures the manager with the specified parameters and sets the instance to the resulting configuration manager.
            </summary>
            <param name="allowLocalOverrides">if set to <c>true</c> [allow local overrides].</param>
            <param name="fileNames">The file names.</param>
        </member>
        <member name="M:System.Configuration.FlexibleConfiguration.LoadProviderFactories(System.String[])">
            <summary>
            Loads the provider factories from all the files. No overrides possible, first to be loaded remains!
            </summary>
            <param name="fileNames">The file names.</param>
        </member>
        <member name="M:System.Configuration.FlexibleConfiguration.Configure(System.Configuration.IFlexibleConfiguration)">
            <summary>
            Configures the specified flexible configuration to use a specific manager.
            </summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="P:System.Configuration.FlexibleConfiguration.Manager">
            <summary>
            Gets the current flexible configuration manager.
            </summary>
        </member>
        <member name="P:System.Configuration.FlexibleConfiguration.ConnectionStrings">
            <summary>
            Gets the connection strings.
            </summary>
        </member>
        <member name="P:System.Configuration.FlexibleConfiguration.AppSettings">
            <summary>
            Gets the app settings.
            </summary>
        </member>
        <member name="T:System.ArgumentNotNullException">
            <summary>
                Exception for not null arguments
            </summary>
        </member>
        <member name="M:System.ArgumentNotNullException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ArgumentNotNullException"/> class.
            </summary>
        </member>
        <member name="M:System.ArgumentNotNullException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ArgumentNotNullException"/> class.
            </summary>
            <param name="paramName">Name of the parameter.</param>
        </member>
        <member name="M:System.ArgumentNotNullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ArgumentNotNullException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:System.ArgumentNotNullException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ArgumentNotNullException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:System.ArgumentNotNullException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ArgumentNotNullException"/> class.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:System.Data.DbConnectionExtensions">
            <summary>
                Extension methods for <see cref="T:System.Data.IDbConnection"/>
            </summary>
        </member>
        <member name="M:System.Data.DbConnectionExtensions.ExecuteNonQuery(System.Data.IDbConnection,System.String,System.Object[])">
            <summary>
            Executes the non query with the specific parameters
            </summary>
            <param name="connection">The connection.</param>
            <param name="text">The text.</param>
            <param name="parameters">The parameters.</param>
            <returns>The number of affected rows.</returns>
        </member>
        <member name="M:System.Data.DbConnectionExtensions.ExecuteReader(System.Data.IDbConnection,System.String,System.Object[])">
            <summary>
            Executes the query and returns a reader
            </summary>
            <param name="connection">The connection.</param>
            <param name="text">The text.</param>
            <param name="parameters">The parameters.</param>
            <returns>A data reader</returns>
        </member>
        <member name="M:System.Data.DbConnectionExtensions.ExecuteScalar``1(System.Data.IDbConnection,System.String,System.Object[])">
            <summary>
            Executes the query and returns a Scalar
            </summary>
            <typeparam name="T">The type of the scalar to get.</typeparam>
            <param name="connection">The connection.</param>
            <param name="text">The text.</param>
            <param name="parameters">The parameters.</param>
            <returns>
            The scalar value.
            </returns>
        </member>
        <member name="T:System.Data.OrderByDirection">
            <summary>
                A Generic order by enumeration.
            </summary>
        </member>
        <member name="F:System.Data.OrderByDirection.Ascending">
            <summary>
                Ascending order
            </summary>
        </member>
        <member name="F:System.Data.OrderByDirection.Descending">
            <summary>
                Descending order
            </summary>
        </member>
        <member name="T:System.Data.OrderParameter">
            <summary>
                An order parameter for anything that requires sorting.
            </summary>
        </member>
        <member name="M:System.Data.OrderParameter.#ctor(System.String,System.Data.OrderByDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.OrderParameter"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:System.Data.OrderParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.OrderParameter"/> class.
            </summary>
        </member>
        <member name="P:System.Data.OrderParameter.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
        </member>
        <member name="P:System.Data.OrderParameter.Direction">
            <summary>
            Gets or sets the direction.
            </summary>
        </member>
        <member name="T:System.Data.PagedDataTable">
            <summary>
                A data table that contains paging information
            </summary>
        </member>
        <member name="M:System.Data.PagedDataTable.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Data.OrderParameter[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.PagedDataTable"/> class.
            </summary>
            <param name="currentPage">The current page.</param>
            <param name="perPage">The per page.</param>
            <param name="totalNumberOfRecords">The total number of records.</param>
            <param name="tableName">Name of the table.</param>
            <param name="tableNamespace">The table namespace.</param>
            <param name="orderedBy">The ordered by.</param>
        </member>
        <member name="P:System.Data.PagedDataTable.CurrentPage">
            <summary>
            Gets the current page.
            </summary>
        </member>
        <member name="P:System.Data.PagedDataTable.PerPage">
            <summary>
            Gets the per page.
            </summary>
        </member>
        <member name="P:System.Data.PagedDataTable.TotalNumberOfRecords">
            <summary>
            Gets the total number of records.
            </summary>
        </member>
        <member name="P:System.Data.PagedDataTable.LastPage">
            <summary>
            Gets the last page.
            </summary>
        </member>
        <member name="P:System.Data.PagedDataTable.NextPage">
            <summary>
            Gets the next page.
            </summary>
        </member>
        <member name="P:System.Data.PagedDataTable.PreviousPage">
            <summary>
            Gets the previous page.
            </summary>
        </member>
        <member name="P:System.Data.PagedDataTable.AllColumns">
            <summary>
            Gets the items in the data table. i.e. The rows already cast as objects.
            </summary>
        </member>
        <member name="P:System.Data.PagedDataTable.Items">
            <summary>
            Gets the items in the data table. i.e. The rows already cast as objects.
            </summary>
        </member>
        <member name="P:System.Data.PagedDataTable.OrderedBy">
            <summary>
            Gets how the current data table is ordered.
            </summary>
        </member>
        <member name="T:System.DisposableAction">
            <summary>
                A disposable action for sweet using () goodness
            </summary>
        </member>
        <member name="M:System.DisposableAction.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:System.DisposableAction"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:System.DisposableAction.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:System.Drawing.ImageExtensions">
            <summary>
                Extensions for Image files.
            </summary>
        </member>
        <member name="M:System.Drawing.ImageExtensions.Resize(System.Drawing.Image,System.Drawing.Size,System.Drawing.Drawing2D.CompositingQuality,System.Drawing.Drawing2D.InterpolationMode,System.Drawing.Drawing2D.SmoothingMode)">
            <summary>
            Resizes the image.
            </summary>
            <param name="self">The self.</param>
            <param name="newSize">The new size.</param>
            <param name="compositingQuality">The compositing quality.</param>
            <param name="interpolationMode">The interpolation mode.</param>
            <param name="smoothingMode">The smoothing mode.</param>
            <returns>A resized bitmap.</returns>
        </member>
        <member name="M:System.Drawing.ImageExtensions.SaveAsJpeg(System.Drawing.Image,System.String,System.Int32)">
            <summary>
                Saves as JPEG.
            </summary>
            <param name="self">The self.</param>
            <param name="path">The path.</param>
            <param name="quality">The quality.</param>
        </member>
        <member name="T:System.Globalization.Culture">
            <summary>
                A class to set the current culture temporarily.
            </summary>
        </member>
        <member name="M:System.Globalization.Culture.As(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Sets the culture as the specified cultures until disposed.
            </summary>
            <param name="culture">The culture.</param>
            <param name="uiCulture">The UI culture.</param>
            <returns>An IDisposable instance</returns>
        </member>
        <member name="M:System.Globalization.Culture.TryParse(System.String,System.Globalization.CultureInfo@,System.Boolean)">
            <summary>
            Tries to create a CultureInfo from the string.
            </summary>
            <param name="culture">The culture.</param>
            <param name="result">The result.</param>
            <param name="allowInvariant">if set to <c>true</c> [allow invariant].</param>
            <returns>
            true if it was parsed.
            </returns>
        </member>
        <member name="P:System.Globalization.Culture.IsSet">
            <summary>
            Gets a value indicating whether this instance is set to something.
            </summary>
        </member>
        <member name="P:System.Globalization.Culture.CurrentCulture">
            <summary>
            Gets the current culture.
            </summary>
        </member>
        <member name="P:System.Globalization.Culture.CurrentUICulture">
            <summary>
            Gets the current UI culture.
            </summary>
        </member>
        <member name="T:System.Globalization.Currencies.CurrencyHelper">
            <summary>
                Helper methods for dealing with money.
            </summary>
        </member>
        <member name="M:System.Globalization.Currencies.CurrencyHelper.Split(System.Decimal,System.Globalization.CultureInfo)">
            <summary>
            Splits the specified value as money.
            </summary>
            <param name="value">The value.</param>
            <param name="culture">The culture.</param>
            <returns>A key value pair list for parts and values.</returns>
        </member>
        <member name="T:System.Globalization.Currencies.CurrencyPart">
            <summary>
                Part of a money output.
            </summary>
        </member>
        <member name="F:System.Globalization.Currencies.CurrencyPart.Symbol">
            <summary>
                Currency symbol ($, £, etc.)
            </summary>
        </member>
        <member name="F:System.Globalization.Currencies.CurrencyPart.Amount">
            <summary>
                Dollars or Euros or equivalent
            </summary>
        </member>
        <member name="F:System.Globalization.Currencies.CurrencyPart.Decimals">
            <summary>
                Cents or Hundredths of Euro or equivalent.
            </summary>
        </member>
        <member name="T:System.IO.FileExtensions">
            <summary>
                File Extensions methods.
            </summary>
        </member>
        <member name="M:System.IO.FileExtensions.GetMimeType(System.String)">
            <summary>
            Gets the MIME type associated with the specified extension.
            </summary>
            <param name="extension">The extension.</param>
            <returns>The MIME type for the following file extension.</returns>
        </member>
        <member name="M:System.IO.FileExtensions.GetExtension(System.String)">
            <summary>
            Gets the default extension for the specified MIME type.
            </summary>
            <param name="mimeType">Type of the MIME.</param>
            <returns>The file extension for the following MIME type.</returns>
        </member>
        <member name="T:System.Net.EnhancedWebClient">
            <summary>
                A web client with more options.
            </summary>
        </member>
        <member name="M:System.Net.EnhancedWebClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Net.EnhancedWebClient"/> class.
            </summary>
        </member>
        <member name="M:System.Net.EnhancedWebClient.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Net.EnhancedWebClient"/> class.
            </summary>
            <param name="timeout">The timeout in milliseconds</param>
        </member>
        <member name="M:System.Net.EnhancedWebClient.GetWebRequest(System.Uri)">
            <summary>
            Returns a <see cref="T:System.Net.WebRequest"/> object for the specified resource.
            </summary>
            <param name="address">A <see cref="T:System.Uri"/> that identifies the resource to request.</param>
            <returns>
            A new <see cref="T:System.Net.WebRequest"/> object for the specified resource.
            </returns>
        </member>
        <member name="P:System.Net.EnhancedWebClient.Timeout">
            <summary>
            Gets or sets the timeout, in milliseconds, for requests made from this web client.
            </summary>
        </member>
        <member name="T:System.Runtime.Serialization.AwfulSerializer">
            <summary>
                An awful serializer that simply iterates public properties and renders them as string however possible.
                Takes into account a few different things, such as lists and dictionaries.
            </summary>
        </member>
        <member name="F:System.Runtime.Serialization.AwfulSerializer.Indentation">
            <summary>
                Indentation separator
            </summary>
        </member>
        <member name="M:System.Runtime.Serialization.AwfulSerializer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Serialization.AwfulSerializer"/> class.
            </summary>
            <param name="indentation">The indentation.</param>
        </member>
        <member name="M:System.Runtime.Serialization.AwfulSerializer.AddStringableType``1">
            <summary>
            Adds the specified type to the list .
            </summary>
            <typeparam name="T">The type to add</typeparam>
            <returns>This instance for fluent configuration.</returns>
        </member>
        <member name="M:System.Runtime.Serialization.AwfulSerializer.AddStringableTypes(System.Type[])">
            <summary>
            Adds the specified types to the list.
            </summary>
            <param name="types">The types.</param>
            <returns>This instance for fluent configuration.</returns>
        </member>
        <member name="M:System.Runtime.Serialization.AwfulSerializer.Serialize``1(``0)">
            <summary>
            Serializes the specified graph.
            </summary>
            <typeparam name="T">The type of the object to serialize.</typeparam>
            <param name="graph">The graph.</param>
            <returns>
            The graph, serialized
            </returns>
        </member>
        <member name="M:System.Runtime.Serialization.AwfulSerializer.Serialize``1(``0,System.Text.StringBuilder)">
            <summary>
            Serializes the specified graph.
            </summary>
            <typeparam name="T">The type of the object to serialize.</typeparam>
            <param name="graph">The graph.</param>
            <param name="builder">The builder.</param>
        </member>
        <member name="P:System.Runtime.Serialization.AwfulSerializer.StringableTypes">
            <summary>
            Gets the types that should be serialized as strings.
            </summary>
        </member>
        <member name="T:System.Runtime.Serialization.Serializers">
            <summary>
                Easy access to serializers.
            </summary>
        </member>
        <member name="M:System.Runtime.Serialization.Serializers.Override(System.Runtime.Serialization.AwfulSerializer)">
            <summary>
            Overrides the default awful serializer.
            </summary>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:System.Runtime.Serialization.Serializers.Override(System.Runtime.Serialization.DataContractSerializerHelper)">
            <summary>
            Overrides the default data contract serializer.
            </summary>
            <param name="serializer">The data contract.</param>
        </member>
        <member name="M:System.Runtime.Serialization.Serializers.Override(System.Runtime.Serialization.Json.DataContractJsonSerializerHelper)">
            <summary>
            Overrides the default data contract json serializer.
            </summary>
            <param name="serializer">The data contract json serializer helper.</param>
        </member>
        <member name="P:System.Runtime.Serialization.Serializers.Awful">
            <summary>
            Gets the current awful serializer
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.Serializers.DataContract">
            <summary>
            Gets the current data contract serializer helper.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.Serializers.DataContractJson">
            <summary>
            Gets the current data contract serializer helper.
            </summary>
        </member>
        <member name="T:System.Security.Cryptography.SupportedCipherAlgorithm">
            <summary>
                Supported Cipher Algorithm for CryptographyHelper
            </summary>
        </member>
        <member name="F:System.Security.Cryptography.SupportedCipherAlgorithm.Rijndael">
            <summary>
                The Rijndael cipher algorithm
            </summary>
        </member>
        <member name="F:System.Security.Cryptography.SupportedCipherAlgorithm.TripleDes">
            <summary>
                The Triple DES cipher algorithm
            </summary>
        </member>
        <member name="T:System.Security.Cryptography.ICryptographyCipher">
            <summary>
                Cipher methods
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyCipher.ToBase64(System.String)">
            <summary>
            Enciphers the string as Base64
            </summary>
            <param name="toEncipher">To encipher.</param>
            <returns>An enciphered string</returns>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyCipher.FromBase64(System.String)">
            <summary>
            Deciphers the string from Base64
            </summary>
            <param name="toDecipher">To decipher.</param>
            <returns>An enciphered string</returns>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyCipher.EncipherString(System.Security.Cryptography.SupportedCipherAlgorithm,System.String,System.String)">
            <summary>
            Enciphers the string.
            </summary>
            <param name="algorithm">The algorithm.</param>
            <param name="toEncipher">To encipher.</param>
            <param name="key">The key.</param>
            <returns>An enciphered string</returns>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyCipher.EncipherBytes(System.Security.Cryptography.SupportedCipherAlgorithm,System.String,System.String)">
            <summary>
            Enciphers the bytes.
            </summary>
            <param name="algorithm">The algorithm.</param>
            <param name="toEncipher">To encipher.</param>
            <param name="key">The key.</param>
            <returns>An enciphered byte array</returns>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyCipher.EncipherString(System.Security.Cryptography.SupportedCipherAlgorithm,System.Byte[],System.Byte[])">
            <summary>
            Enciphers the string.
            </summary>
            <param name="algorithm">The algorithm.</param>
            <param name="toEncipher">To encipher.</param>
            <param name="key">The key.</param>
            <returns>An enciphered string</returns>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyCipher.EncipherBytes(System.Security.Cryptography.SupportedCipherAlgorithm,System.Byte[],System.Byte[])">
            <summary>
            Enciphers the bytes.
            </summary>
            <param name="algorithm">The algorithm.</param>
            <param name="toEncipher">To encipher.</param>
            <param name="key">The key.</param>
            <returns>An enciphered byte array</returns>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyCipher.DecipherString(System.Security.Cryptography.SupportedCipherAlgorithm,System.String,System.String)">
            <summary>
            Deciphers the string.
            </summary>
            <param name="algorithm">The algorithm.</param>
            <param name="toDecipher">To decipher.</param>
            <param name="key">The key.</param>
            <returns>A deciphered string</returns>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyCipher.DecipherBytes(System.Security.Cryptography.SupportedCipherAlgorithm,System.String,System.String)">
            <summary>
            Deciphers the bytes.
            </summary>
            <param name="algorithm">The algorithm.</param>
            <param name="toDecipher">To decipher.</param>
            <param name="key">The key.</param>
            <returns>A deciphered byte array</returns>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyCipher.DecipherString(System.Security.Cryptography.SupportedCipherAlgorithm,System.Byte[],System.Byte[])">
            <summary>
            Deciphers the string.
            </summary>
            <param name="algorithm">The algorithm.</param>
            <param name="toDecipher">To decipher.</param>
            <param name="key">The key.</param>
            <returns>A deciphered string</returns>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyCipher.DecipherBytes(System.Security.Cryptography.SupportedCipherAlgorithm,System.Byte[],System.Byte[])">
            <summary>
            Deciphers the bytes.
            </summary>
            <param name="algorithm">The algorithm.</param>
            <param name="toDecipher">To decipher.</param>
            <param name="key">The key.</param>
            <returns>A deciphered byte array</returns>
        </member>
        <member name="T:System.Security.Cryptography.ICryptographyHasher">
            <summary>
                Hashing cryptography
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyHasher.AsString(System.Security.Cryptography.SupportedHashAlgorithm,System.String)">
            <summary>
            Hashes the string with the specified algorithm and returns a string
            </summary>
            <param name="algorithm">The algorithm.</param>
            <param name="toHash">To hash.</param>
            <returns>A hashed string</returns>
        </member>
        <member name="M:System.Security.Cryptography.ICryptographyHasher.AsBytes(System.Security.Cryptography.SupportedHashAlgorithm,System.String)">
            <summary>
            Hashes the string with the specified algorithm and returns an array of bytes.
            </summary>
            <param name="algorithm">The algorithm.</param>
            <param name="toHash">To hash.</param>
            <returns>A hashed byte array</returns>
        </member>
        <member name="T:System.StringArgumentNotNullOrEmptyException">
            <summary>
                Exception for empty or null string arguments
            </summary>
        </member>
        <member name="M:System.StringArgumentNotNullOrEmptyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNotNullOrEmptyException"/> class.
            </summary>
        </member>
        <member name="M:System.StringArgumentNotNullOrEmptyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNotNullOrEmptyException"/> class.
            </summary>
            <param name="paramName">Name of the parameter.</param>
        </member>
        <member name="M:System.StringArgumentNotNullOrEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNotNullOrEmptyException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:System.StringArgumentNotNullOrEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNotNullOrEmptyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:System.StringArgumentNotNullOrEmptyException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNotNullOrEmptyException"/> class.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:System.StringArgumentNotNullOrWhiteSpaceException">
            <summary>
                Exception for whitespace or null string arguments
            </summary>
        </member>
        <member name="M:System.StringArgumentNotNullOrWhiteSpaceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNotNullOrWhiteSpaceException"/> class.
            </summary>
        </member>
        <member name="M:System.StringArgumentNotNullOrWhiteSpaceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNotNullOrWhiteSpaceException"/> class.
            </summary>
            <param name="paramName">Name of the parameter.</param>
        </member>
        <member name="M:System.StringArgumentNotNullOrWhiteSpaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNotNullOrWhiteSpaceException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:System.StringArgumentNotNullOrWhiteSpaceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNotNullOrWhiteSpaceException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:System.StringArgumentNotNullOrWhiteSpaceException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNotNullOrWhiteSpaceException"/> class.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:System.Globalization.Countries.District">
            <summary>
                A district is a country division.
            </summary>
        </member>
        <member name="T:System.Globalization.Countries.CountryDivision">
            <summary>
                A country's divisions.
                e.g. Canada => Province, US => State
            </summary>
        </member>
        <member name="F:System.Globalization.Countries.CountryDivision.Country">
            <summary>
                The country this province belongs to.
            </summary>
        </member>
        <member name="M:System.Globalization.Countries.CountryDivision.#ctor(System.Globalization.Countries.Country)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Globalization.Countries.CountryDivision"/> class.
            </summary>
            <param name="country">The country.</param>
        </member>
        <member name="M:System.Globalization.Countries.CountryDivision.GetDisplayName(System.Globalization.CultureInfo)">
            <summary>
            Gets the display name.
            </summary>
            <param name="cultureInfo">The culture info. Should use current UI culture if not specified</param>
            <returns>The display name</returns>
        </member>
        <member name="M:System.Globalization.Countries.CountryDivision.Equals(System.Globalization.Countries.CountryDivision)">
            <summary>
            Returns true if they are equal.
            </summary>
            <param name="other">The other.</param>
            <returns>True if they are equal.</returns>
        </member>
        <member name="M:System.Globalization.Countries.CountryDivision.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Globalization.Countries.CountryDivision.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:System.Globalization.Countries.CountryDivision.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Globalization.Countries.CountryDivision.Type">
            <summary>
            Gets the type of the division.
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.CountryDivision.TwoLetterCode">
            <summary>
            Gets the two letter code of the country division
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.CountryDivision.EnglishName">
            <summary>
            Gets the English name of the country division
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.CountryDivision.NativeName">
            <summary>
            Gets the name of the country division in it's native language
            </summary>
        </member>
        <member name="M:System.Globalization.Countries.District.#ctor(System.Globalization.Countries.Country,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Globalization.Countries.District"/> class.
            </summary>
            <param name="country">The country.</param>
            <param name="twoLetterCode">The two letter code.</param>
            <param name="englishName">Name of the english.</param>
            <param name="nativeName">Name of the native.</param>
        </member>
        <member name="P:System.Globalization.Countries.District.Type">
            <summary>
            Gets the type of the division.
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.District.TwoLetterCode">
            <summary>
            Gets the two letter code of the country division
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.District.EnglishName">
            <summary>
            Gets the English name of the country division
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.District.NativeName">
            <summary>
            Gets the name of the country division in it's native language
            </summary>
        </member>
        <member name="T:System.Globalization.Countries.Province">
            <summary>
                A province is a country division.
            </summary>
        </member>
        <member name="M:System.Globalization.Countries.Province.#ctor(System.Globalization.Countries.Country,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Globalization.Countries.Province"/> class.
            </summary>
            <param name="country">The country.</param>
            <param name="twoLetterCode">The two letter code.</param>
            <param name="englishName">Name of the english.</param>
            <param name="nativeName">Name of the native.</param>
        </member>
        <member name="P:System.Globalization.Countries.Province.Type">
            <summary>
            Gets the type of the division.
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Province.TwoLetterCode">
            <summary>
            Gets the two letter code of the country division
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Province.EnglishName">
            <summary>
            Gets the English name of the country division
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Province.NativeName">
            <summary>
            Gets the name of the country division in it's native language
            </summary>
        </member>
        <member name="T:System.Globalization.Countries.State">
            <summary>
                A state is a country division.
            </summary>
        </member>
        <member name="M:System.Globalization.Countries.State.#ctor(System.Globalization.Countries.Country,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Globalization.Countries.State"/> class.
            </summary>
            <param name="country">The country.</param>
            <param name="twoLetterCode">The two letter code.</param>
            <param name="englishName">Name of the english.</param>
            <param name="nativeName">Name of the native.</param>
        </member>
        <member name="P:System.Globalization.Countries.State.Type">
            <summary>
            Gets the type of the division.
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.State.TwoLetterCode">
            <summary>
            Gets the two letter code of the country division
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.State.EnglishName">
            <summary>
            Gets the English name of the country division
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.State.NativeName">
            <summary>
            Gets the name of the country division in it's native language
            </summary>
        </member>
        <member name="T:System.Globalization.Countries.Territory">
            <summary>
                A territory is a country division.
            </summary>
        </member>
        <member name="M:System.Globalization.Countries.Territory.#ctor(System.Globalization.Countries.Country,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Globalization.Countries.Territory"/> class.
            </summary>
            <param name="country">The country.</param>
            <param name="twoLetterCode">The two letter code.</param>
            <param name="englishName">Name of the english.</param>
            <param name="nativeName">Name of the native.</param>
        </member>
        <member name="P:System.Globalization.Countries.Territory.Type">
            <summary>
            Gets the type of the division.
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Territory.TwoLetterCode">
            <summary>
            Gets the two letter code of the country division
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Territory.EnglishName">
            <summary>
            Gets the English name of the country division
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Territory.NativeName">
            <summary>
            Gets the name of the country division in it's native language
            </summary>
        </member>
        <member name="T:System.IValidate">
            <summary>
                Validation interface
            </summary>
        </member>
        <member name="M:System.IValidate.Null``1(``0,System.String)">
            <summary>
            Validates that the value supplied is not null.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">the value</param>
            <param name="name">The name of the parameter</param>
            <exception cref="T:System.ArgumentNullException">If it is null</exception>
        </member>
        <member name="M:System.IValidate.NullOrEmpty(System.String,System.String)">
            <summary>
            Validates that the string supplied is not null or empty.
            </summary>
            <param name="toValidate">the string</param>
            <param name="name">The name of the parameter</param>
            <exception cref="T:System.StringArgumentNullOrEmptyException">If it is null or empty</exception>
        </member>
        <member name="M:System.IValidate.NullOrWhiteSpace(System.String,System.String)">
            <summary>
            Validates that the string supplied is not null or white space.
            </summary>
            <param name="toValidate">the string</param>
            <param name="name">The name of the parameter</param>
            <exception cref="T:System.StringArgumentNullOrWhiteSpaceException">If it is null or whitespace</exception>
        </member>
        <member name="M:System.IValidate.EqualTo``1(``0,``0,System.String)">
            <summary>
            Validates that the values are equal.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="toCompare">To compare.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentException">If it is equal to.</exception>
        </member>
        <member name="M:System.IValidate.HigherThan``1(``0,``0,System.String)">
            <summary>
            Validates that the value supplied is higher than the comparison value supplied.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="toCompare">To compare.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentException">If it is higher than.</exception>
        </member>
        <member name="M:System.IValidate.HigherThanOrEqualTo``1(``0,``0,System.String)">
            <summary>
            Validates that the value supplied is higher or equal to the comparison value supplied.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="toCompare">To compare.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentException">If it is higher than or equal to.</exception>
        </member>
        <member name="M:System.IValidate.LowerThan``1(``0,``0,System.String)">
            <summary>
            Validates that the value supplied is lower than the comparison supplied.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="toCompare">To compare.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentException">If it is lower than.</exception>
        </member>
        <member name="M:System.IValidate.LowerThanOrEqualTo``1(``0,``0,System.String)">
            <summary>
            Validates that the value supplied is lower or equal to the comparison supplied.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="toCompare">To compare.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentException">If it is lower than or equal to.</exception>
        </member>
        <member name="M:System.IValidate.Between``1(``0,``0,``0,System.String,System.Boolean)">
            <summary>
            Check if the value is between the limits.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="lowerLimit">The lower limit.</param>
            <param name="higherLimit">The higher limit.</param>
            <param name="name">The name.</param>
            <param name="inclusive">if set to <c>true</c> [inclusive].</param>
            <exception cref="T:System.ArgumentException">If it is between the two.</exception>
        </member>
        <member name="M:System.IValidate.ContainedIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Checks whether "toValidate" is contained in the "array"
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="array">The array.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentException">If it is contained in..</exception>
        </member>
        <member name="P:System.IValidate.Not">
            <summary>
            Gets a negation of the current validation hypothesis.
            </summary>
        </member>
        <member name="T:System.Net.Mail.FileSmtpClient">
            <summary>
                An SMTP client that actually just writes files to disk.
            </summary>
        </member>
        <member name="T:System.Net.Mail.ISmtpClient">
            <summary>
                Interface for mail sending.
            </summary>
        </member>
        <member name="M:System.Net.Mail.ISmtpClient.Send(System.Net.Mail.MailMessage)">
            <summary>
            Sends the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:System.Net.Mail.ISmtpClient.Send(System.String,System.String,System.String,System.String)">
            <summary>
            Sends the specified message.
            </summary>
            <param name="from">The sender of the email.</param>
            <param name="recipients">The recipients.</param>
            <param name="subject">The subject.</param>
            <param name="body">The body.</param>
        </member>
        <member name="M:System.Net.Mail.FileSmtpClient.#ctor(System.String,System.Func{System.Net.Mail.MailMessage,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Net.Mail.FileSmtpClient"/> class.
            </summary>
            <param name="directory">The directory.</param>
            <param name="getFileNameFunc">A function to create a file name in the directory for each message sent.</param>
        </member>
        <member name="M:System.Net.Mail.FileSmtpClient.Send(System.Net.Mail.MailMessage)">
            <summary>
            Sends the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:System.Net.Mail.FileSmtpClient.Send(System.String,System.String,System.String,System.String)">
            <summary>
            Sends the specified message.
            </summary>
            <param name="from">The sender of the email.</param>
            <param name="recipients">The recipients.</param>
            <param name="subject">The subject.</param>
            <param name="body">The body.</param>
        </member>
        <member name="T:System.Net.Mail.SmtpClientWrapper">
            <summary>
                A wrapper around the base <see cref="T:System.Net.Mail.SmtpClient"/>
            </summary>
        </member>
        <member name="M:System.Net.Mail.SmtpClientWrapper.#ctor(System.Net.Mail.SmtpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClientWrapper"/> class.
            </summary>
            <param name="smtpClient">The SMTP client.</param>
        </member>
        <member name="M:System.Net.Mail.SmtpClientWrapper.Send(System.Net.Mail.MailMessage)">
            <summary>
            Sends the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:System.Net.Mail.SmtpClientWrapper.Send(System.String,System.String,System.String,System.String)">
            <summary>
            Sends the specified message.
            </summary>
            <param name="from">The sender of the email.</param>
            <param name="recipients">The recipients.</param>
            <param name="subject">The subject.</param>
            <param name="body">The body.</param>
        </member>
        <member name="T:System.NotFoundException">
            <summary>
                An exception for object that aren't found.
            </summary>
        </member>
        <member name="M:System.NotFoundException.#ctor(System.Type,System.Object,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.NotFoundException"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="key">The key.</param>
            <param name="keyName">Name of the key.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:System.NotFoundException.#ctor(System.Type,System.Object,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.NotFoundException"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="key">The key.</param>
            <param name="keyName">Name of the key.</param>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:System.NotFoundException.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="P:System.NotFoundException.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="P:System.NotFoundException.KeyName">
            <summary>
            Gets the name of the key.
            </summary>
            <value>
            The name of the key.
            </value>
        </member>
        <member name="T:System.Data.Common.ConnectionStringHelper">
            <summary>
                A helper class for connection strings.
            </summary>
        </member>
        <member name="M:System.Data.Common.ConnectionStringHelper.SafeDataDirectoryReplacement(System.String)">
            <summary>
            Replaces |DataDirectory| macro to point to a file system in a safe way. Checks for proper path separators.
            </summary>
            <param name="dataSource">The data source.</param>
            <returns>A data source with the token replaced.</returns>
        </member>
        <member name="T:System.Data.Json.DynamicJson">
            <summary>
                Dynamic JSON parser
            </summary>
        </member>
        <member name="M:System.Data.Json.DynamicJson.Parse(System.String)">
            <summary>
            Parses the specified json.
            </summary>
            <param name="json">The json.</param>
            <returns>A dynamic object for accessing the JSON</returns>
        </member>
        <member name="T:System.Globalization.Countries.Country">
            <summary>
                A country on planet Earth.
            </summary>
        </member>
        <member name="M:System.Globalization.Countries.Country.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Globalization.Countries.Country"/> class.
            </summary>
            <param name="twoLetterIsoCode">The two letter ISO code.</param>
        </member>
        <member name="M:System.Globalization.Countries.Country.GetDisplayName(System.Globalization.CultureInfo)">
            <summary>
            Gets the display name.
            </summary>
            <param name="cultureInfo">The culture info. Should use current UI culture if not specified</param>
            <returns>The display name of the country.</returns>
        </member>
        <member name="M:System.Globalization.Countries.Country.Equals(System.Globalization.Countries.Country)">
            <summary>
            Checks whether the country is equal to this instance.
            </summary>
            <param name="other">The other.</param>
            <returns>True if the countries are the same.</returns>
        </member>
        <member name="M:System.Globalization.Countries.Country.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Globalization.Countries.Country.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:System.Globalization.Countries.Country.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:System.Globalization.Countries.Country.TwoLetterCode">
            <summary>
            Gets the two letter code. <see href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2" />
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Country.ThreeLetterCode">
            <summary>
            Gets the three letter code. <see href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-3" />
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Country.EnglishName">
            <summary>
            Gets the English name.
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Country.NativeName">
            <summary>
            Gets the name of the country in it's native language
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Country.Divisions">
            <summary>
            Gets the divisions of this country.
            </summary>
        </member>
        <member name="T:System.Globalization.Countries.ICountryRepository">
            <summary>
                A repository of countries
            </summary>
        </member>
        <member name="M:System.Globalization.Countries.ICountryRepository.GetAll">
            <summary>
            Gets all the countries.
            </summary>
            <returns>A list of all countries.</returns>
        </member>
        <member name="M:System.Globalization.Countries.ICountryRepository.GetByTwoLetterCode(System.String)">
            <summary>
            Gets a country by two letter code.
            </summary>
            <param name="code">The code.</param>
            <returns>The country with the specified two letter code.</returns>
        </member>
        <member name="M:System.Globalization.Countries.ICountryRepository.GetByThreeLetterCode(System.String)">
            <summary>
            Gets a country by three letter code.
            </summary>
            <param name="code">The code.</param>
            <returns>The country with the specified three letter code.</returns>
        </member>
        <member name="T:System.Globalization.Countries.Implementations.RegionInfoCountry">
            <summary>
                A country implementation with RegionInfo
            </summary>
        </member>
        <member name="M:System.Globalization.Countries.Implementations.RegionInfoCountry.#ctor(System.Globalization.RegionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Globalization.Countries.Implementations.RegionInfoCountry"/> class.
            </summary>
            <param name="regionInfo">The region info.</param>
        </member>
        <member name="P:System.Globalization.Countries.Implementations.RegionInfoCountry.TwoLetterCode">
            <summary>
            Gets the two letter code. <see href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2" />
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Implementations.RegionInfoCountry.ThreeLetterCode">
            <summary>
            Gets the three letter code. <see href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-3" />
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Implementations.RegionInfoCountry.EnglishName">
            <summary>
            Gets the English name.
            </summary>
        </member>
        <member name="P:System.Globalization.Countries.Implementations.RegionInfoCountry.NativeName">
            <summary>
            Gets the name of the country in it's native language
            </summary>
        </member>
        <member name="T:System.Globalization.Countries.Implementations.RegionInfoCountryRepository">
            <summary>
                Region info implementation of a country repository.
            </summary>
        </member>
        <member name="M:System.Globalization.Countries.Implementations.RegionInfoCountryRepository.GetAll">
            <summary>
            Gets all the countries.
            </summary>
            <returns>
            A list of all countries.
            </returns>
        </member>
        <member name="M:System.Globalization.Countries.Implementations.RegionInfoCountryRepository.GetByTwoLetterCode(System.String)">
            <summary>
            Gets a country by two letter code.
            </summary>
            <param name="code">The code.</param>
            <returns>
            The country with the specified two letter code.
            </returns>
            <exception cref="T:System.NotFoundException">If the code cannot be found.</exception>
        </member>
        <member name="M:System.Globalization.Countries.Implementations.RegionInfoCountryRepository.GetByThreeLetterCode(System.String)">
            <summary>
            Gets a country by three letter code.
            </summary>
            <param name="code">The code.</param>
            <returns>
            The country with the specified three letter code.
            </returns>
            <exception cref="T:System.NotFoundException">If the code cannot be found.</exception>
        </member>
        <member name="T:System.AlreadyExistsException">
            <summary>
                An exception for object that already exist.
            </summary>
        </member>
        <member name="M:System.AlreadyExistsException.#ctor(System.Type,System.Object,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.AlreadyExistsException"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="key">The key.</param>
            <param name="keyName">Name of the key.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:System.AlreadyExistsException.#ctor(System.Type,System.Object,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.AlreadyExistsException"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="key">The key.</param>
            <param name="keyName">Name of the key.</param>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:System.AlreadyExistsException.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="P:System.AlreadyExistsException.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="P:System.AlreadyExistsException.KeyName">
            <summary>
            Gets the name of the key.
            </summary>
            <value>
            The name of the key.
            </value>
        </member>
        <member name="T:System.Messages.ContextualNotification">
            <summary>
                Contextual notifications for anything!
            </summary>
        </member>
        <member name="M:System.Messages.ContextualNotification.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Messages.ContextualNotification"/> class.
            </summary>
            <param name="store">The store.</param>
        </member>
        <member name="M:System.Messages.ContextualNotification.Any">
            <summary>
            returns whether any of the notifications have data.
            </summary>
            <returns>True if there are any notifications.</returns>
        </member>
        <member name="P:System.Messages.ContextualNotification.Info">
            <summary>
            Gets or sets the info notification.
            </summary>
        </member>
        <member name="P:System.Messages.ContextualNotification.Success">
            <summary>
            Gets or sets the success notification.
            </summary>
        </member>
        <member name="P:System.Messages.ContextualNotification.Warning">
            <summary>
            Gets or sets the warning notification.
            </summary>
        </member>
        <member name="P:System.Messages.ContextualNotification.Error">
            <summary>
            Gets or sets the error notification.
            </summary>
        </member>
        <member name="T:System.Messages.ContextualNotificationData">
            <summary>
                Data for a contextual notification
            </summary>
        </member>
        <member name="M:System.Messages.ContextualNotificationData.op_Implicit(System.String)~System.Messages.ContextualNotificationData">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:System.Messages.ContextualNotificationData"/>.
            </summary>
            <param name="s">The s.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:System.Messages.ContextualNotificationData.op_Implicit(System.Messages.ContextualNotificationData)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Messages.ContextualNotificationData"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="flash">The flash.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:System.Messages.ContextualNotificationData.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:System.Messages.ContextualNotificationData.Add(System.String,System.Boolean)">
            <summary>
            Adds the specified data to the notification.
            </summary>
            <param name="newData">The new data.</param>
            <param name="withNewLine">if set to <c>true</c> [with new line].</param>
        </member>
        <member name="M:System.Messages.ContextualNotificationData.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:System.Messages.ContextualNotificationData.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
              <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:System.Properties.Languages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.AE">
            <summary>
              Looks up a localized string similar to U.A.E..
            </summary>
        </member>
        <member name="P:System.Properties.Languages.AF">
            <summary>
              Looks up a localized string similar to Afghanistan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.AL">
            <summary>
              Looks up a localized string similar to Albania.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.AM">
            <summary>
              Looks up a localized string similar to Armenia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.AR">
            <summary>
              Looks up a localized string similar to Argentina.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.AT">
            <summary>
              Looks up a localized string similar to Austria.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.AU">
            <summary>
              Looks up a localized string similar to Australia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.AZ">
            <summary>
              Looks up a localized string similar to Azerbaijan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.BA">
            <summary>
              Looks up a localized string similar to Bosnia and Herzegovina.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.BD">
            <summary>
              Looks up a localized string similar to Bangladesh.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.BE">
            <summary>
              Looks up a localized string similar to Belgium.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.BG">
            <summary>
              Looks up a localized string similar to Bulgaria.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.BH">
            <summary>
              Looks up a localized string similar to Bahrain.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.BN">
            <summary>
              Looks up a localized string similar to Brunei Darussalam.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.BO">
            <summary>
              Looks up a localized string similar to Bolivia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.BR">
            <summary>
              Looks up a localized string similar to Brazil.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.BY">
            <summary>
              Looks up a localized string similar to Belarus.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.BZ">
            <summary>
              Looks up a localized string similar to Belize.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA">
            <summary>
              Looks up a localized string similar to Canada.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_AB">
            <summary>
              Looks up a localized string similar to Alberta.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_BC">
            <summary>
              Looks up a localized string similar to British Columbia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_MB">
            <summary>
              Looks up a localized string similar to Manitoba.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_NB">
            <summary>
              Looks up a localized string similar to New Brunswick.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_NL">
            <summary>
              Looks up a localized string similar to Newfoundland and Labrador.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_NS">
            <summary>
              Looks up a localized string similar to Nova Scotia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_NT">
            <summary>
              Looks up a localized string similar to Northwest Territories.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_NU">
            <summary>
              Looks up a localized string similar to Nunavut.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_ON">
            <summary>
              Looks up a localized string similar to Ontario.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_PE">
            <summary>
              Looks up a localized string similar to Prince Edward Island.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_QC">
            <summary>
              Looks up a localized string similar to Quebec.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_SK">
            <summary>
              Looks up a localized string similar to Saskatchewan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CA_YT">
            <summary>
              Looks up a localized string similar to Yukon.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CH">
            <summary>
              Looks up a localized string similar to Switzerland.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CL">
            <summary>
              Looks up a localized string similar to Chile.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CN">
            <summary>
              Looks up a localized string similar to People&apos;s Republic of China.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CO">
            <summary>
              Looks up a localized string similar to Colombia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CR">
            <summary>
              Looks up a localized string similar to Costa Rica.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CS">
            <summary>
              Looks up a localized string similar to Serbia and Montenegro (Former).
            </summary>
        </member>
        <member name="P:System.Properties.Languages.CZ">
            <summary>
              Looks up a localized string similar to Czech Republic.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.DE">
            <summary>
              Looks up a localized string similar to Germany.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.DK">
            <summary>
              Looks up a localized string similar to Denmark.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.DO">
            <summary>
              Looks up a localized string similar to Dominican Republic.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.DZ">
            <summary>
              Looks up a localized string similar to Algeria.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.EC">
            <summary>
              Looks up a localized string similar to Ecuador.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.EE">
            <summary>
              Looks up a localized string similar to Estonia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.EG">
            <summary>
              Looks up a localized string similar to Egypt.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.ES">
            <summary>
              Looks up a localized string similar to Spain.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.ET">
            <summary>
              Looks up a localized string similar to Ethiopia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.FI">
            <summary>
              Looks up a localized string similar to Finland.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.FO">
            <summary>
              Looks up a localized string similar to Faroe Islands.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.FR">
            <summary>
              Looks up a localized string similar to France.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.GB">
            <summary>
              Looks up a localized string similar to United Kingdom.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.GE">
            <summary>
              Looks up a localized string similar to Georgia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.GL">
            <summary>
              Looks up a localized string similar to Greenland.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.GR">
            <summary>
              Looks up a localized string similar to Greece.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.GT">
            <summary>
              Looks up a localized string similar to Guatemala.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.HK">
            <summary>
              Looks up a localized string similar to Hong Kong S.A.R..
            </summary>
        </member>
        <member name="P:System.Properties.Languages.HN">
            <summary>
              Looks up a localized string similar to Honduras.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.HR">
            <summary>
              Looks up a localized string similar to Croatia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.HU">
            <summary>
              Looks up a localized string similar to Hungary.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.ID">
            <summary>
              Looks up a localized string similar to Indonesia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.IE">
            <summary>
              Looks up a localized string similar to Ireland.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.IL">
            <summary>
              Looks up a localized string similar to Israel.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.IN">
            <summary>
              Looks up a localized string similar to India.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.IQ">
            <summary>
              Looks up a localized string similar to Iraq.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.IR">
            <summary>
              Looks up a localized string similar to Iran.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.IS">
            <summary>
              Looks up a localized string similar to Iceland.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.IT">
            <summary>
              Looks up a localized string similar to Italy.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.JM">
            <summary>
              Looks up a localized string similar to Jamaica.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.JO">
            <summary>
              Looks up a localized string similar to Jordan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.JP">
            <summary>
              Looks up a localized string similar to Japan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.KE">
            <summary>
              Looks up a localized string similar to Kenya.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.KG">
            <summary>
              Looks up a localized string similar to Kyrgyzstan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.KH">
            <summary>
              Looks up a localized string similar to Cambodia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.KR">
            <summary>
              Looks up a localized string similar to Korea.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.KW">
            <summary>
              Looks up a localized string similar to Kuwait.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.KZ">
            <summary>
              Looks up a localized string similar to Kazakhstan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.LA">
            <summary>
              Looks up a localized string similar to Lao P.D.R..
            </summary>
        </member>
        <member name="P:System.Properties.Languages.LB">
            <summary>
              Looks up a localized string similar to Lebanon.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.LI">
            <summary>
              Looks up a localized string similar to Liechtenstein.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.LK">
            <summary>
              Looks up a localized string similar to Sri Lanka.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.LT">
            <summary>
              Looks up a localized string similar to Lithuania.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.LU">
            <summary>
              Looks up a localized string similar to Luxembourg.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.LV">
            <summary>
              Looks up a localized string similar to Latvia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.LY">
            <summary>
              Looks up a localized string similar to Libya.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.MA">
            <summary>
              Looks up a localized string similar to Morocco.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.MC">
            <summary>
              Looks up a localized string similar to Principality of Monaco.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.ME">
            <summary>
              Looks up a localized string similar to Montenegro.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.MK">
            <summary>
              Looks up a localized string similar to Macedonia (FYROM).
            </summary>
        </member>
        <member name="P:System.Properties.Languages.MN">
            <summary>
              Looks up a localized string similar to Mongolia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.MO">
            <summary>
              Looks up a localized string similar to Macao S.A.R..
            </summary>
        </member>
        <member name="P:System.Properties.Languages.MT">
            <summary>
              Looks up a localized string similar to Malta.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.MV">
            <summary>
              Looks up a localized string similar to Maldives.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.MX">
            <summary>
              Looks up a localized string similar to Mexico.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.MY">
            <summary>
              Looks up a localized string similar to Malaysia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.NG">
            <summary>
              Looks up a localized string similar to Nigeria.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.NI">
            <summary>
              Looks up a localized string similar to Nicaragua.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.NL">
            <summary>
              Looks up a localized string similar to Netherlands.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.NO">
            <summary>
              Looks up a localized string similar to Norway.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.NP">
            <summary>
              Looks up a localized string similar to Nepal.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.NZ">
            <summary>
              Looks up a localized string similar to New Zealand.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.OM">
            <summary>
              Looks up a localized string similar to Oman.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.PA">
            <summary>
              Looks up a localized string similar to Panama.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.PE">
            <summary>
              Looks up a localized string similar to Peru.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.PH">
            <summary>
              Looks up a localized string similar to Republic of the Philippines.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.PK">
            <summary>
              Looks up a localized string similar to Islamic Republic of Pakistan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.PL">
            <summary>
              Looks up a localized string similar to Poland.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.PR">
            <summary>
              Looks up a localized string similar to Puerto Rico.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.PT">
            <summary>
              Looks up a localized string similar to Portugal.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.PY">
            <summary>
              Looks up a localized string similar to Paraguay.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.QA">
            <summary>
              Looks up a localized string similar to Qatar.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.RO">
            <summary>
              Looks up a localized string similar to Romania.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.RS">
            <summary>
              Looks up a localized string similar to Serbia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.RU">
            <summary>
              Looks up a localized string similar to Russia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.RW">
            <summary>
              Looks up a localized string similar to Rwanda.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.SA">
            <summary>
              Looks up a localized string similar to Saudi Arabia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.SE">
            <summary>
              Looks up a localized string similar to Sweden.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.SG">
            <summary>
              Looks up a localized string similar to Singapore.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.SI">
            <summary>
              Looks up a localized string similar to Slovenia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.SK">
            <summary>
              Looks up a localized string similar to Slovakia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.SN">
            <summary>
              Looks up a localized string similar to Senegal.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.SV">
            <summary>
              Looks up a localized string similar to El Salvador.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.SY">
            <summary>
              Looks up a localized string similar to Syria.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.TH">
            <summary>
              Looks up a localized string similar to Thailand.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.TJ">
            <summary>
              Looks up a localized string similar to Tajikistan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.TM">
            <summary>
              Looks up a localized string similar to Turkmenistan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.TN">
            <summary>
              Looks up a localized string similar to Tunisia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.TR">
            <summary>
              Looks up a localized string similar to Turkey.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.TT">
            <summary>
              Looks up a localized string similar to Trinidad and Tobago.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.TW">
            <summary>
              Looks up a localized string similar to Taiwan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.UA">
            <summary>
              Looks up a localized string similar to Ukraine.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US">
            <summary>
              Looks up a localized string similar to United States.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_AK">
            <summary>
              Looks up a localized string similar to Alaska.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_AL">
            <summary>
              Looks up a localized string similar to Alabama.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_AR">
            <summary>
              Looks up a localized string similar to Arkansas.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_AS">
            <summary>
              Looks up a localized string similar to American Samoa.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_AZ">
            <summary>
              Looks up a localized string similar to Arizona.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_CA">
            <summary>
              Looks up a localized string similar to California.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_CO">
            <summary>
              Looks up a localized string similar to Colorado.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_CT">
            <summary>
              Looks up a localized string similar to Connecticut.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_DC">
            <summary>
              Looks up a localized string similar to District of Columbia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_DE">
            <summary>
              Looks up a localized string similar to Delaware.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_FL">
            <summary>
              Looks up a localized string similar to Florida.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_GA">
            <summary>
              Looks up a localized string similar to Georgia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_GU">
            <summary>
              Looks up a localized string similar to Guam.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_HI">
            <summary>
              Looks up a localized string similar to Hawaii.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_IA">
            <summary>
              Looks up a localized string similar to Iowa.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_ID">
            <summary>
              Looks up a localized string similar to Idaho.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_IL">
            <summary>
              Looks up a localized string similar to Illinois.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_IN">
            <summary>
              Looks up a localized string similar to Indiana.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_KS">
            <summary>
              Looks up a localized string similar to Kansas.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_KY">
            <summary>
              Looks up a localized string similar to Kentucky.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_LA">
            <summary>
              Looks up a localized string similar to Louisiana.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_MA">
            <summary>
              Looks up a localized string similar to Massachusetts.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_MD">
            <summary>
              Looks up a localized string similar to Maryland.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_ME">
            <summary>
              Looks up a localized string similar to Maine.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_MI">
            <summary>
              Looks up a localized string similar to Michigan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_MN">
            <summary>
              Looks up a localized string similar to Minnesota.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_MO">
            <summary>
              Looks up a localized string similar to Missouri.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_MS">
            <summary>
              Looks up a localized string similar to Mississippi.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_MT">
            <summary>
              Looks up a localized string similar to Montana.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_NC">
            <summary>
              Looks up a localized string similar to North Carolina.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_ND">
            <summary>
              Looks up a localized string similar to North Dakota.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_NE">
            <summary>
              Looks up a localized string similar to Nebraska.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_NH">
            <summary>
              Looks up a localized string similar to New Hampshire.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_NJ">
            <summary>
              Looks up a localized string similar to New Jersey.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_NM">
            <summary>
              Looks up a localized string similar to New Mexico.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_NV">
            <summary>
              Looks up a localized string similar to Nevada.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_NY">
            <summary>
              Looks up a localized string similar to New York.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_OH">
            <summary>
              Looks up a localized string similar to Ohio.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_OK">
            <summary>
              Looks up a localized string similar to Oklahoma.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_OR">
            <summary>
              Looks up a localized string similar to Oregon.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_PA">
            <summary>
              Looks up a localized string similar to Pennsylvania.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_PR">
            <summary>
              Looks up a localized string similar to Puerto Rico.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_RI">
            <summary>
              Looks up a localized string similar to Rhode Island.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_SC">
            <summary>
              Looks up a localized string similar to South Carolina.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_SD">
            <summary>
              Looks up a localized string similar to South Dakota.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_TN">
            <summary>
              Looks up a localized string similar to Tennessee.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_TX">
            <summary>
              Looks up a localized string similar to Texas.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_UT">
            <summary>
              Looks up a localized string similar to Utah.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_VA">
            <summary>
              Looks up a localized string similar to Virginia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_VI">
            <summary>
              Looks up a localized string similar to Virgin Islands.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_VT">
            <summary>
              Looks up a localized string similar to Vermont.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_WA">
            <summary>
              Looks up a localized string similar to Washington.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_WI">
            <summary>
              Looks up a localized string similar to Wisconsin.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_WV">
            <summary>
              Looks up a localized string similar to West Virginia.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.US_WY">
            <summary>
              Looks up a localized string similar to Wyoming.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.UY">
            <summary>
              Looks up a localized string similar to Uruguay.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.UZ">
            <summary>
              Looks up a localized string similar to Uzbekistan.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.VE">
            <summary>
              Looks up a localized string similar to Bolivarian Republic of Venezuela.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.VN">
            <summary>
              Looks up a localized string similar to Vietnam.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.YE">
            <summary>
              Looks up a localized string similar to Yemen.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.ZA">
            <summary>
              Looks up a localized string similar to South Africa.
            </summary>
        </member>
        <member name="P:System.Properties.Languages.ZW">
            <summary>
              Looks up a localized string similar to Zimbabwe.
            </summary>
        </member>
        <member name="T:System.Runtime.Serialization.DataContractSerializerHelper">
            <summary>
                Data Contract serializer helper
            </summary>
        </member>
        <member name="M:System.Runtime.Serialization.DataContractSerializerHelper.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializerHelper"/> class.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> [omit XML declaration].</param>
            <param name="indent">if set to <c>true</c> [indent].</param>
        </member>
        <member name="M:System.Runtime.Serialization.DataContractSerializerHelper.Serialize``1(``0)">
            <summary>
            Serializes the specified graph.
            </summary>
            <typeparam name="T">The type to serialize</typeparam>
            <param name="graph">The graph.</param>
            <returns>A serialized string</returns>
        </member>
        <member name="M:System.Runtime.Serialization.DataContractSerializerHelper.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified graph.
            </summary>
            <typeparam name="T">The type to serialize</typeparam>
            <param name="xml">The XML.</param>
            <returns>A deserialized object.</returns>
        </member>
        <member name="P:System.Runtime.Serialization.DataContractSerializerHelper.OmitXmlDeclaration">
            <summary>
            Gets or sets a value indicating whether to omit the XML declaration.
            </summary>
            <value>
              <c>true</c> if [omit XML declaration]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:System.Runtime.Serialization.DataContractSerializerHelper.Indent">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:System.Runtime.Serialization.DataContractSerializerHelper"/> is indent.
            </summary>
            <value>
              <c>true</c> if indent; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerHelper">
            <summary>
                Data Contract serializer helper
            </summary>
        </member>
        <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerHelper.Serialize``1(``0)">
            <summary>
            Serializes the specified graph.
            </summary>
            <typeparam name="T">The type of the graph to serialize.</typeparam>
            <param name="graph">The graph.</param>
            <returns>
            A serialized string.
            </returns>
        </member>
        <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerHelper.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified graph.
            </summary>
            <typeparam name="T">The type of the graph to deserialize.</typeparam>
            <param name="json">The json.</param>
            <returns>A deserialized object.</returns>
        </member>
        <member name="T:System.Security.Cryptography.CryptographyHelper">
            <summary>
                A helper for cryptography stuff
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.CryptographyHelper.System#Security#Cryptography#ICryptographyHasher#AsString(System.Security.Cryptography.SupportedHashAlgorithm,System.String)">
            <summary>
            Hashes a string according to the specified algorithm
            </summary>
            <param name="algorithm">The algorithm to hash the string with</param>
            <param name="toHash">The string to hash</param>
            <returns>
            The hashed string
            </returns>
        </member>
        <member name="M:System.Security.Cryptography.CryptographyHelper.System#Security#Cryptography#ICryptographyHasher#AsBytes(System.Security.Cryptography.SupportedHashAlgorithm,System.String)">
            <summary>
            Hashes a string according to the specified algorithm
            </summary>
            <param name="algorithm">The algorithm to hash the string with</param>
            <param name="toHash">The string to hash</param>
            <returns>
            The hashed string
            </returns>
        </member>
        <member name="M:System.Security.Cryptography.CryptographyHelper.HashString(System.Security.Cryptography.HashAlgorithm,System.String)">
            <summary>
                Hashes a string according to an HashAlgorithm
            </summary>
            <param name="algorithm">The algorithm to use</param>
            <param name="toHash">The string to hash</param>
            <returns>The hashed string</returns>
        </member>
        <member name="P:System.Security.Cryptography.CryptographyHelper.Hash">
            <summary>
            Gets the the hasher instance.
            </summary>
        </member>
        <member name="P:System.Security.Cryptography.CryptographyHelper.Cipher">
            <summary>
            Gets the the cipher instance.
            </summary>
        </member>
        <member name="T:System.Security.Cryptography.SupportedHashAlgorithm">
            <summary>
                Supported Hash Algorithm for CryptographyHelper
            </summary>
        </member>
        <member name="F:System.Security.Cryptography.SupportedHashAlgorithm.Md5">
            <summary>
                The MD5 hash algorithm
            </summary>
        </member>
        <member name="F:System.Security.Cryptography.SupportedHashAlgorithm.Sha1">
            <summary>
                The SHA1 hash algorithm
            </summary>
        </member>
        <member name="F:System.Security.Cryptography.SupportedHashAlgorithm.Sha256">
            <summary>
                The SHA256 hash algorithm
            </summary>
        </member>
        <member name="F:System.Security.Cryptography.SupportedHashAlgorithm.Sha512">
            <summary>
                The SHA512 hash algorithm
            </summary>
        </member>
        <member name="T:System.StringArgumentNullOrWhiteSpaceException">
            <summary>
                Exception for whitespace or null string arguments
            </summary>
        </member>
        <member name="M:System.StringArgumentNullOrWhiteSpaceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNullOrWhiteSpaceException"/> class.
            </summary>
        </member>
        <member name="M:System.StringArgumentNullOrWhiteSpaceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNullOrWhiteSpaceException"/> class.
            </summary>
            <param name="paramName">Name of the parameter.</param>
        </member>
        <member name="M:System.StringArgumentNullOrWhiteSpaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNullOrWhiteSpaceException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:System.StringArgumentNullOrWhiteSpaceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNullOrWhiteSpaceException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:System.StringArgumentNullOrWhiteSpaceException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNullOrWhiteSpaceException"/> class.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:System.Properties.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Properties.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Cryptography_AlgorithmNotSupported">
            <summary>
              Looks up a localized string similar to The cryptographic algorithm &quot;{0}&quot; is not supported by this helper..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.DataUriPostedFile_NotADataUri">
            <summary>
              Looks up a localized string similar to The specified string is not a Data URI.
            </summary>
        </member>
        <member name="P:System.Properties.Strings.ICountry_NotFoundID">
            <summary>
              Looks up a localized string similar to The country with ID &quot;{0}&quot; was not found..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.ICountry_NotFoundThreeLetterCode">
            <summary>
              Looks up a localized string similar to The country with three letter code &quot;{0}&quot; was not found..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.ICountry_NotFoundTwoLetterCode">
            <summary>
              Looks up a localized string similar to The country with two letter code &quot;{0}&quot; was not found..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_Between">
            <summary>
              Looks up a localized string similar to The value must be between {0} and {1}..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_BetweenInclusive">
            <summary>
              Looks up a localized string similar to The value must be between {0} and {1} (inclusive)..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_ContainedIn">
            <summary>
              Looks up a localized string similar to The value &quot;{0}&quot; must not be in the array &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_EqualTo">
            <summary>
              Looks up a localized string similar to The value &quot;{1}&quot; should be equal to &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_HigherThan">
            <summary>
              Looks up a localized string similar to The value must be higher than {0}..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_HigherThanOrEqualTo">
            <summary>
              Looks up a localized string similar to The value must be higher than or equal to {0}..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_LowerThan">
            <summary>
              Looks up a localized string similar to The value must be lower than {0}..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_LowerThanOrEqualTo">
            <summary>
              Looks up a localized string similar to The value must be lower than or equal to {0}..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NotBetween">
            <summary>
              Looks up a localized string similar to The value must not be between {0} and {1}..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NotBetweenInclusive">
            <summary>
              Looks up a localized string similar to The value must not be between {0} and {1} (inclusive)..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NotContainedIn">
            <summary>
              Looks up a localized string similar to The value &quot;{0}&quot; must be in the array &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NotEqualTo">
            <summary>
              Looks up a localized string similar to The value &quot;{1}&quot; should not be equal to &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NotHigherThan">
            <summary>
              Looks up a localized string similar to The value must not be higher than {0}..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NotHigherThanOrEqualTo">
            <summary>
              Looks up a localized string similar to The value must not be higher than or equal to {0}..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NotLowerThan">
            <summary>
              Looks up a localized string similar to The value must not be lower than {0}..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NotLowerThanOrEqualTo">
            <summary>
              Looks up a localized string similar to The value must not be lower than or equal to {0}..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NotNullOrEmpty">
            <summary>
              Looks up a localized string similar to The string must be null or empty..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NotNullOrWhitespace">
            <summary>
              Looks up a localized string similar to The string must be null or whitespace..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NullOrEmpty">
            <summary>
              Looks up a localized string similar to The string must not be null or empty..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validate_NullOrWhitespace">
            <summary>
              Looks up a localized string similar to The string must not be null or whitespace..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validation_Comparison">
            <summary>
              Looks up a localized string similar to This field failed the comparison to the field &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validation_GreaterThan">
            <summary>
              Looks up a localized string similar to This field must be greater than the field &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validation_GreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to This field must be lesser than or equal to the field &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validation_LesserThan">
            <summary>
              Looks up a localized string similar to This field must be lesser than the field &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validation_LesserThanOrEqualTo">
            <summary>
              Looks up a localized string similar to This field must be greater than or equal to the field &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validation_RequiredBooleanFalse">
            <summary>
              Looks up a localized string similar to This field must have the value &quot;false&quot;..
            </summary>
        </member>
        <member name="P:System.Properties.Strings.Validation_RequiredBooleanTrue">
            <summary>
              Looks up a localized string similar to This field must have the value &quot;true&quot;..
            </summary>
        </member>
        <member name="T:System.StringArgumentNullOrEmptyException">
            <summary>
                Exception for empty or null string arguments
            </summary>
        </member>
        <member name="M:System.StringArgumentNullOrEmptyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNullOrEmptyException"/> class.
            </summary>
        </member>
        <member name="M:System.StringArgumentNullOrEmptyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNullOrEmptyException"/> class.
            </summary>
            <param name="paramName">Name of the parameter.</param>
        </member>
        <member name="M:System.StringArgumentNullOrEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNullOrEmptyException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:System.StringArgumentNullOrEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNullOrEmptyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:System.StringArgumentNullOrEmptyException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.StringArgumentNullOrEmptyException"/> class.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:System.StringExtensions">
            <summary>
                String extensions!
            </summary>
        </member>
        <member name="M:System.StringExtensions.Truncate(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Truncates the string to a maximum length
            </summary>
            <param name="self">The string to truncate</param>
            <param name="maximumLength">The maximum number of characters to keep</param>
            <param name="suffix">The string to put at the end of the truncated string</param>
            <param name="trimSpace">if set to <c>true</c>, trim the spaces before the suffix.</param>
            <returns>A truncated string</returns>
        </member>
        <member name="M:System.StringExtensions.SubstringStartEnd(System.String,System.Int32,System.Int32)">
            <summary>
                Retrieves a substring from this instance. The substring starts at a specified
                character position and ends at the specified index
            </summary>
            <param name="self">The self.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <returns>A substring from startIndex to endIndex</returns>
        </member>
        <member name="M:System.StringExtensions.RemoveDiacritics(System.String)">
            <summary>
            Removes the diacritics from the string.
            </summary>
            <param name="self">The string.</param>
            <returns>A string without diacritics.</returns>
        </member>
        <member name="M:System.StringExtensions.RemoveHtml(System.String)">
            <summary>
                Removes the HTML from the string. will return funky results for invalid markup.
            </summary>
            <param name="self">The self.</param>
            <returns>A string without any HTML.</returns>
        </member>
        <member name="M:System.StringExtensions.ToSlug(System.String,System.Int32)">
            <summary>
            Returns a slug of the specified string.
            </summary>
            <param name="self">The phrase.</param>
            <param name="maxLength">Length of the max.</param>
            <returns>A slug of the string</returns>
        </member>
        <member name="T:System.UriExtensions">
            <summary>
                A set of extensions for the URI object.
            </summary>
        </member>
        <member name="M:System.UriExtensions.ChangeQueryString(System.Uri,System.String)">
            <summary>
            Changes the query string for the specified new value.
            </summary>
            <param name="self">The self.</param>
            <param name="newQueryString">The new query string, no need to put "?" in it.</param>
            <returns>A new URI with the query string updated.</returns>
        </member>
        <member name="M:System.UriExtensions.ChangePath(System.Uri,System.String)">
            <summary>
            Changes the path for the specified new value.
            </summary>
            <param name="self">The self.</param>
            <param name="newPath">The new query string, no need to put "?" in it.</param>
            <returns>A new URI with the path updated.</returns>
        </member>
        <member name="T:System.Validate">
            <summary>
                Helper to throw exceptions on arguments.
            </summary>
        </member>
        <member name="M:System.Validate.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:System.Validate"/> class from being created.
            </summary>
        </member>
        <member name="F:System.Validate.Is">
            <summary>
                Default instance of validate.
            </summary>
        </member>
        <member name="M:System.Validate.Null``1(``0,System.String)">
            <summary>
            Validates that the value supplied is not null.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">the value</param>
            <param name="name">The name of the parameter</param>
            <exception cref="T:System.ArgumentNotNullException">If it is not null</exception>
        </member>
        <member name="M:System.Validate.NullOrEmpty(System.String,System.String)">
            <summary>
            Validates thats the string supplied is not null or empty.
            </summary>
            <param name="toValidate">the string</param>
            <param name="name">The name of the parameter</param>
            <exception cref="T:System.StringArgumentNotNullOrEmptyException"></exception>
            <exception cref="T:System.StringArgumentNullOrEmptyException"></exception>
        </member>
        <member name="M:System.Validate.NullOrWhiteSpace(System.String,System.String)">
            <summary>
            Validates thats the string supplied is not null or white space.
            </summary>
            <param name="toValidate">the string</param>
            <param name="name">The name of the parameter</param>
            <exception cref="T:System.StringArgumentNotNullOrWhiteSpaceException"></exception>
            <exception cref="T:System.StringArgumentNullOrWhiteSpaceException"></exception>
        </member>
        <member name="M:System.Validate.EqualTo``1(``0,``0,System.String)">
            <summary>
            Validates that the values are equal.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="toCompare">To compare.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:System.Validate.HigherThan``1(``0,``0,System.String)">
            <summary>
            Validates that the value supplied is higher than the comparison value supplied.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="toCompare">To compare.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:System.Validate.HigherThanOrEqualTo``1(``0,``0,System.String)">
            <summary>
            Validates that the value supplied is higher or equal to the comparison value supplied.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="toCompare">To compare.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:System.Validate.LowerThan``1(``0,``0,System.String)">
            <summary>
            Validates that the value supplied is lower than the comparison supplied.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="toCompare">To compare.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:System.Validate.LowerThanOrEqualTo``1(``0,``0,System.String)">
            <summary>
            Validates that the value supplied is lower or equal to the comparison supplied.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="toCompare">To compare.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:System.Validate.Between``1(``0,``0,``0,System.String,System.Boolean)">
            <summary>
            Betweens the specified to validate.
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="lowerLimit">The lower limit.</param>
            <param name="higherLimit">The higher limit.</param>
            <param name="name">The name.</param>
            <param name="inclusive">if set to <c>true</c> [inclusive].</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:System.Validate.ContainedIn``1(``0,System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Checks whether "toValidate" is contained in the "array"
            </summary>
            <typeparam name="T">The type to check.</typeparam>
            <param name="toValidate">To validate.</param>
            <param name="array">The array.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="P:System.Validate.Not">
            <summary>
            Gets a negation of the current validation hypothesis.
            </summary>
        </member>
        <member name="T:System.Arithmetic.Arithmetics">
            <summary>
                A helper class to get Arithmetic classes
            </summary>
        </member>
        <member name="M:System.Arithmetic.Arithmetics.Get``1">
            <summary>
            Gets the instance of arithmetic for the specific type.
            </summary>
            <typeparam name="T">The type of arithmetic to get.</typeparam>
            <returns>An instance of <see cref="T:System.Arithmetic.IArithmetic`1"/> of the right type.</returns>
        </member>
        <member name="F:System.Arithmetic.Arithmetics.Byte">
            <summary>
            Gets the Byte arithmetic.
            </summary>
            <value>The Byte.</value>
        </member>
        <member name="F:System.Arithmetic.Arithmetics.Decimal">
            <summary>
            Gets the Decimal arithmetic.
            </summary>
            <value>The Decimal.</value>
        </member>
        <member name="F:System.Arithmetic.Arithmetics.Double">
            <summary>
            Gets the Double arithmetic.
            </summary>
            <value>The Double.</value>
        </member>
        <member name="F:System.Arithmetic.Arithmetics.Int16">
            <summary>
            Gets the Int16 arithmetic.
            </summary>
            <value>The Int16.</value>
        </member>
        <member name="F:System.Arithmetic.Arithmetics.Int32">
            <summary>
            Gets the int32 arithmetic.
            </summary>
            <value>The int32.</value>
        </member>
        <member name="F:System.Arithmetic.Arithmetics.Int64">
            <summary>
            Gets the Int64 arithmetic.
            </summary>
            <value>The Int64.</value>
        </member>
        <member name="F:System.Arithmetic.Arithmetics.SByte">
            <summary>
            Gets the SByte arithmetic.
            </summary>
            <value>The SByte.</value>
        </member>
        <member name="F:System.Arithmetic.Arithmetics.Single">
            <summary>
            Gets the Single arithmetic.
            </summary>
            <value>The Single.</value>
        </member>
        <member name="F:System.Arithmetic.Arithmetics.UInt16">
            <summary>
            Gets the UInt16 arithmetic.
            </summary>
            <value>The UInt16.</value>
        </member>
        <member name="F:System.Arithmetic.Arithmetics.UInt32">
            <summary>
            Gets the UInt32 arithmetic.
            </summary>
            <value>The UInt32.</value>
        </member>
        <member name="F:System.Arithmetic.Arithmetics.UInt64">
            <summary>
            Gets the UInt64 arithmetic.
            </summary>
            <value>The UInt64.</value>
        </member>
        <member name="T:System.Arithmetic.ByteArithmetic">
            <summary>
                Arithmetic for byte
            </summary>
        </member>
        <member name="T:System.Arithmetic.IArithmetic`1">
            <summary>
            An interface for numbers
            </summary>
            <typeparam name="T">The type of arithmetic.</typeparam>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.Add(`0,`0)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The added value.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.Substract(`0,`0)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The substracted value.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.Multiply(`0,`0)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The multiplied value.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.Divide(`0,`0)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The divided value.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.Power(`0,`0)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The value powered.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.Modulo(`0,`0)">
            <summary>
            Modulo the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The value with modulo applied.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.GreaterThan(`0,`0)">
            <summary>
            Greater the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>True if greater than.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.GreaterOrEqualTo(`0,`0)">
            <summary>
            Greater the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>True if greater or equal to.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.LessThan(`0,`0)">
            <summary>
            Less the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>True if less than.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.LessOrEqualTo(`0,`0)">
            <summary>
            Less than or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>True if less or equal to.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.Equals(`0,`0)">
            <summary>
            Returns true if the values are equal.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>True if equal to.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.Max(`0,`0)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The max between the two.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.Min(`0,`0)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The min between the two.</returns>
        </member>
        <member name="M:System.Arithmetic.IArithmetic`1.Abs(`0)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns>The absolute value.</returns>
        </member>
        <member name="P:System.Arithmetic.IArithmetic`1.Zero">
            <summary>
            Gets the zero value for the Arithmetic
            </summary>
            <value>The zero.</value>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.Add(System.Byte,System.Byte)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.Substract(System.Byte,System.Byte)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.Multiply(System.Byte,System.Byte)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.Divide(System.Byte,System.Byte)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.Power(System.Byte,System.Byte)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.Modulo(System.Byte,System.Byte)">
            <summary>
            Modulo the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.GreaterThan(System.Byte,System.Byte)">
            <summary>
            Greaters the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.GreaterOrEqualTo(System.Byte,System.Byte)">
            <summary>
            Greaters the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.LessThan(System.Byte,System.Byte)">
            <summary>
            Lesses the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.LessOrEqualTo(System.Byte,System.Byte)">
            <summary>
            Lesses the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.Equals(System.Byte,System.Byte)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.Max(System.Byte,System.Byte)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.Min(System.Byte,System.Byte)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.ByteArithmetic.Abs(System.Byte)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:System.Arithmetic.ByteArithmetic.Zero">
            <summary>
            Gets the zero value.
            </summary>
        </member>
        <member name="T:System.Arithmetic.DecimalArithmetic">
            <summary>
                An arithmetic interface for decimal
            </summary>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.Add(System.Decimal,System.Decimal)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.Substract(System.Decimal,System.Decimal)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.Multiply(System.Decimal,System.Decimal)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.Divide(System.Decimal,System.Decimal)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.Power(System.Decimal,System.Decimal)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.Modulo(System.Decimal,System.Decimal)">
            <summary>
            Moduloes the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.GreaterThan(System.Decimal,System.Decimal)">
            <summary>
            Greaters the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.GreaterOrEqualTo(System.Decimal,System.Decimal)">
            <summary>
            Greaters the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.LessThan(System.Decimal,System.Decimal)">
            <summary>
            Lesses the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.LessOrEqualTo(System.Decimal,System.Decimal)">
            <summary>
            Lesses the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.Equals(System.Decimal,System.Decimal)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.Max(System.Decimal,System.Decimal)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.Min(System.Decimal,System.Decimal)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DecimalArithmetic.Abs(System.Decimal)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:System.Arithmetic.DecimalArithmetic.Zero">
            <summary>
            Gets the zero value.
            </summary>
        </member>
        <member name="T:System.Arithmetic.DoubleArithmetic">
            <summary>
                An arithmetic interface for double
            </summary>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.Add(System.Double,System.Double)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.Substract(System.Double,System.Double)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.Multiply(System.Double,System.Double)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.Divide(System.Double,System.Double)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.Power(System.Double,System.Double)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.Modulo(System.Double,System.Double)">
            <summary>
            Moduloes the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.GreaterThan(System.Double,System.Double)">
            <summary>
            Greaters the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.GreaterOrEqualTo(System.Double,System.Double)">
            <summary>
            Greaters the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.LessThan(System.Double,System.Double)">
            <summary>
            Lesses the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.LessOrEqualTo(System.Double,System.Double)">
            <summary>
            Lesses the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.Equals(System.Double,System.Double)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.Max(System.Double,System.Double)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.Min(System.Double,System.Double)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.DoubleArithmetic.Abs(System.Double)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:System.Arithmetic.DoubleArithmetic.Zero">
            <summary>
            Gets the zero value.
            </summary>
        </member>
        <member name="T:System.Arithmetic.Int16Arithmetic">
            <summary>
                An arithmetic interface for short
            </summary>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.Add(System.Int16,System.Int16)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.Substract(System.Int16,System.Int16)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.Multiply(System.Int16,System.Int16)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.Divide(System.Int16,System.Int16)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.Power(System.Int16,System.Int16)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.Modulo(System.Int16,System.Int16)">
            <summary>
            Moduloes the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.GreaterThan(System.Int16,System.Int16)">
            <summary>
            Greaters the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.GreaterOrEqualTo(System.Int16,System.Int16)">
            <summary>
            Greaters the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.LessThan(System.Int16,System.Int16)">
            <summary>
            Lesses the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.LessOrEqualTo(System.Int16,System.Int16)">
            <summary>
            Lesses the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.Equals(System.Int16,System.Int16)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.Max(System.Int16,System.Int16)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.Min(System.Int16,System.Int16)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int16Arithmetic.Abs(System.Int16)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:System.Arithmetic.Int16Arithmetic.Zero">
            <summary>
            Gets the zero value.
            </summary>
        </member>
        <member name="T:System.Arithmetic.Int32Arithmetic">
            <summary>
                An arithmetic interface for int
            </summary>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.Add(System.Int32,System.Int32)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.Substract(System.Int32,System.Int32)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.Multiply(System.Int32,System.Int32)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.Divide(System.Int32,System.Int32)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.Power(System.Int32,System.Int32)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.Modulo(System.Int32,System.Int32)">
            <summary>
            Moduloes the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.GreaterThan(System.Int32,System.Int32)">
            <summary>
            Greaters the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.GreaterOrEqualTo(System.Int32,System.Int32)">
            <summary>
            Greaters the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.LessThan(System.Int32,System.Int32)">
            <summary>
            Lesses the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.LessOrEqualTo(System.Int32,System.Int32)">
            <summary>
            Lesses the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.Equals(System.Int32,System.Int32)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.Max(System.Int32,System.Int32)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.Min(System.Int32,System.Int32)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int32Arithmetic.Abs(System.Int32)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:System.Arithmetic.Int32Arithmetic.Zero">
            <summary>
            Gets the zero value.
            </summary>
        </member>
        <member name="T:System.Arithmetic.Int64Arithmetic">
            <summary>
                An arithmetic interface for long
            </summary>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.Add(System.Int64,System.Int64)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.Substract(System.Int64,System.Int64)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.Multiply(System.Int64,System.Int64)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.Divide(System.Int64,System.Int64)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.Power(System.Int64,System.Int64)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.Modulo(System.Int64,System.Int64)">
            <summary>
            Moduloes the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.GreaterThan(System.Int64,System.Int64)">
            <summary>
            Greaters the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.GreaterOrEqualTo(System.Int64,System.Int64)">
            <summary>
            Greaters the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.LessThan(System.Int64,System.Int64)">
            <summary>
            Lesses the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.LessOrEqualTo(System.Int64,System.Int64)">
            <summary>
            Lesses the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.Equals(System.Int64,System.Int64)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.Max(System.Int64,System.Int64)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.Min(System.Int64,System.Int64)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.Int64Arithmetic.Abs(System.Int64)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:System.Arithmetic.Int64Arithmetic.Zero">
            <summary>
            Gets the zero value.
            </summary>
        </member>
        <member name="T:System.Arithmetic.SByteArithmetic">
            <summary>
                Arithmetic for sbyte
            </summary>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.Add(System.SByte,System.SByte)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.Substract(System.SByte,System.SByte)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.Multiply(System.SByte,System.SByte)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.Divide(System.SByte,System.SByte)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.Power(System.SByte,System.SByte)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.Modulo(System.SByte,System.SByte)">
            <summary>
            Moduloes the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.GreaterThan(System.SByte,System.SByte)">
            <summary>
            Greaters the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.GreaterOrEqualTo(System.SByte,System.SByte)">
            <summary>
            Greaters the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.LessThan(System.SByte,System.SByte)">
            <summary>
            Lesses the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.LessOrEqualTo(System.SByte,System.SByte)">
            <summary>
            Lesses the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.Equals(System.SByte,System.SByte)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.Max(System.SByte,System.SByte)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.Min(System.SByte,System.SByte)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SByteArithmetic.Abs(System.SByte)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:System.Arithmetic.SByteArithmetic.Zero">
            <summary>
            Gets the zero value.
            </summary>
        </member>
        <member name="T:System.Arithmetic.SingleArithmetic">
            <summary>
                An arithmetic interface for float
            </summary>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.Add(System.Single,System.Single)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.Substract(System.Single,System.Single)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.Multiply(System.Single,System.Single)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.Divide(System.Single,System.Single)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.Power(System.Single,System.Single)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.Modulo(System.Single,System.Single)">
            <summary>
            Moduloes the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.GreaterThan(System.Single,System.Single)">
            <summary>
            Greaters the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.GreaterOrEqualTo(System.Single,System.Single)">
            <summary>
            Greaters the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.LessThan(System.Single,System.Single)">
            <summary>
            Lesses the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.LessOrEqualTo(System.Single,System.Single)">
            <summary>
            Lesses the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.Equals(System.Single,System.Single)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.Max(System.Single,System.Single)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.Min(System.Single,System.Single)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.SingleArithmetic.Abs(System.Single)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:System.Arithmetic.SingleArithmetic.Zero">
            <summary>
            Gets the zero value.
            </summary>
        </member>
        <member name="T:System.Arithmetic.UInt16Arithmetic">
            <summary>
                An arithmetic interface for ushort
            </summary>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.Add(System.UInt16,System.UInt16)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.Substract(System.UInt16,System.UInt16)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.Multiply(System.UInt16,System.UInt16)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.Divide(System.UInt16,System.UInt16)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.Power(System.UInt16,System.UInt16)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.Modulo(System.UInt16,System.UInt16)">
            <summary>
            Moduloes the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.GreaterThan(System.UInt16,System.UInt16)">
            <summary>
            Greaters the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.GreaterOrEqualTo(System.UInt16,System.UInt16)">
            <summary>
            Greaters the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.LessThan(System.UInt16,System.UInt16)">
            <summary>
            Lesses the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.LessOrEqualTo(System.UInt16,System.UInt16)">
            <summary>
            Lesses the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.Equals(System.UInt16,System.UInt16)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.Max(System.UInt16,System.UInt16)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.Min(System.UInt16,System.UInt16)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt16Arithmetic.Abs(System.UInt16)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:System.Arithmetic.UInt16Arithmetic.Zero">
            <summary>
            Gets the zero value.
            </summary>
        </member>
        <member name="T:System.Arithmetic.UInt32Arithmetic">
            <summary>
                An arithmetic interface for uint
            </summary>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.Add(System.UInt32,System.UInt32)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.Substract(System.UInt32,System.UInt32)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.Multiply(System.UInt32,System.UInt32)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.Divide(System.UInt32,System.UInt32)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.Power(System.UInt32,System.UInt32)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.Modulo(System.UInt32,System.UInt32)">
            <summary>
            Moduloes the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.GreaterThan(System.UInt32,System.UInt32)">
            <summary>
            Greaters the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.GreaterOrEqualTo(System.UInt32,System.UInt32)">
            <summary>
            Greaters the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.LessThan(System.UInt32,System.UInt32)">
            <summary>
            Lesses the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.LessOrEqualTo(System.UInt32,System.UInt32)">
            <summary>
            Lesses the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.Equals(System.UInt32,System.UInt32)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.Max(System.UInt32,System.UInt32)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.Min(System.UInt32,System.UInt32)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt32Arithmetic.Abs(System.UInt32)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:System.Arithmetic.UInt32Arithmetic.Zero">
            <summary>
            Gets the zero value.
            </summary>
        </member>
        <member name="T:System.Arithmetic.UInt64Arithmetic">
            <summary>
                An arithmetic interface for ulong
            </summary>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.Add(System.UInt64,System.UInt64)">
            <summary>
            Adds the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.Substract(System.UInt64,System.UInt64)">
            <summary>
            Substracts the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.Multiply(System.UInt64,System.UInt64)">
            <summary>
            Multiplies the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.Divide(System.UInt64,System.UInt64)">
            <summary>
            Divides the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.Power(System.UInt64,System.UInt64)">
            <summary>
            Powers the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.Modulo(System.UInt64,System.UInt64)">
            <summary>
            Moduloes the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.GreaterThan(System.UInt64,System.UInt64)">
            <summary>
            Greaters the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.GreaterOrEqualTo(System.UInt64,System.UInt64)">
            <summary>
            Greaters the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.LessThan(System.UInt64,System.UInt64)">
            <summary>
            Lesses the than.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.LessOrEqualTo(System.UInt64,System.UInt64)">
            <summary>
            Lesses the or equal to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.Equals(System.UInt64,System.UInt64)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.Max(System.UInt64,System.UInt64)">
            <summary>
            Finds the maximum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.Min(System.UInt64,System.UInt64)">
            <summary>
            Finds the minimum value between two numbers.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Arithmetic.UInt64Arithmetic.Abs(System.UInt64)">
            <summary>
            Returns the absolute value of the number
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="P:System.Arithmetic.UInt64Arithmetic.Zero">
            <summary>
            Gets the zero value.
            </summary>
        </member>
        <member name="T:System.Web.DataUriPostedFile">
            <summary>
                A file, posted as a Data Uri. <see href="http://en.wikipedia.org/wiki/Data_URI_scheme"/>
            </summary>
        </member>
        <member name="F:System.Web.DataUriPostedFile.Begin">
            <summary>
                Data Uris begin with this.
            </summary>
        </member>
        <member name="F:System.Web.DataUriPostedFile.DataSeparator">
            <summary>
                This separator precedes that data.
            </summary>
        </member>
        <member name="F:System.Web.DataUriPostedFile.Base64Marker">
            <summary>
                If encoded in Base64, this is included in the string.
            </summary>
        </member>
        <member name="F:System.Web.DataUriPostedFile.CharsetMarker">
            <summary>
                Mark between the mime type and the actual charset.
            </summary>
        </member>
        <member name="M:System.Web.DataUriPostedFile.Parse(System.String)">
            <summary>
            Parses the specified data URL into an HttpPostedFileBase
            </summary>
            <param name="dataUri">The data URI.</param>
            <returns>A parsed Data URI posted file.</returns>
        </member>
        <member name="M:System.Web.DataUriPostedFile.SaveAs(System.String)">
            <summary>
            When overridden in a derived class, saves the contents of an uploaded file.
            </summary>
            <param name="filename">The name of the file to save.</param>
        </member>
        <member name="M:System.Web.DataUriPostedFile.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:System.Web.DataUriPostedFile.ContentLength">
            <summary>
            When overridden in a derived class, gets the size of an uploaded file, in bytes.
            </summary>
            <returns>The length of the file, in bytes.</returns>
        </member>
        <member name="P:System.Web.DataUriPostedFile.FileName">
            <summary>
            When overridden in a derived class, gets the fully qualified name of the file on the client.
            </summary>
            <returns>The name of the file on the client, which includes the directory path.</returns>
        </member>
        <member name="P:System.Web.DataUriPostedFile.ContentType">
            <summary>
            When overridden in a derived class, gets the MIME content type of an uploaded file.
            </summary>
            <returns>The MIME content type of the file.</returns>
        </member>
        <member name="P:System.Web.DataUriPostedFile.InputStream">
            <summary>
            When overridden in a derived class, gets a <see cref="T:System.IO.Stream"/> object that points to an uploaded file to prepare for reading the contents of the file.
            </summary>
            <returns>An object for reading a file.</returns>
        </member>
        <member name="T:System.Web.Uploads.IFileUploader">
            <summary>
                An interface to upload files from the Web
            </summary>
        </member>
        <member name="M:System.Web.Uploads.IFileUploader.Upload(System.Web.HttpPostedFileBase,System.String)">
            <summary>
            Uploads the specified file.
            </summary>
            <param name="file">The file.</param>
            <param name="fileName">Name of the file.</param>
            <returns>The URI of the file that was uploaded.</returns>
        </member>
        <member name="M:System.Web.Uploads.IFileUploader.Upload(System.IO.Stream,System.String)">
            <summary>
            Uploads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="fileName">Name of the file.</param>
            <returns>The URI of the file that was uploaded.</returns>
        </member>
        <member name="M:System.Web.Uploads.IFileUploader.Rename(System.String,System.String)">
            <summary>
                Renames a previously uploaded file to the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="newFileName">New name of the file.</param>
            <returns>The URI of the file that was renamed.</returns>
        </member>
        <member name="M:System.Web.Uploads.IFileUploader.Delete(System.String)">
            <summary>
                Deletes a previously uploaded file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="T:System.Web.Uploads.LocalSiteFileUploader">
            <summary>
                A file uploader that saves images locally, according to a hard-coded path or a virtual path.
            </summary>
        </member>
        <member name="F:System.Web.Uploads.LocalSiteFileUploader.resultToUriFunc">
            <summary>
                Allows the caller to specify how to create a URI from the resulting path of the saved file.
            </summary>
        </member>
        <member name="M:System.Web.Uploads.LocalSiteFileUploader.#ctor(System.String,System.Func{System.String,System.Uri})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Uploads.LocalSiteFileUploader"/> class.
            </summary>
            <param name="localPath">The local path.</param>
            <param name="resultToUriFunc">The if local path is not a virtual path, this method must be passed to transform file system paths to URIs.</param>
        </member>
        <member name="M:System.Web.Uploads.LocalSiteFileUploader.Upload(System.Web.HttpPostedFileBase,System.String)">
            <summary>
            Uploads the specified file.
            </summary>
            <param name="file">The file.</param>
            <param name="fileName">Name of the file.</param>
            <returns>
            The URI of the file that was uploaded.
            </returns>
        </member>
        <member name="M:System.Web.Uploads.LocalSiteFileUploader.Upload(System.IO.Stream,System.String)">
            <summary>
            Uploads the specified file.
            </summary>
            <param name="stream">The stream.</param>
            <param name="fileName">Name of the file.</param>
            <returns>
            The URI of the file that was uploaded.
            </returns>
        </member>
        <member name="M:System.Web.Uploads.LocalSiteFileUploader.Rename(System.String,System.String)">
            <summary>
            Renames a previously uploaded file to the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="newFileName">New name of the file.</param>
            <returns>
            The URI of the file that was renamed.
            </returns>
        </member>
        <member name="M:System.Web.Uploads.LocalSiteFileUploader.Delete(System.String)">
            <summary>
            Deletes a previously uploaded file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
    </members>
</doc>
